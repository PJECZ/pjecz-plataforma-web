{
	"Flask views": {
		"scope": "python",
		"prefix": "fviews",
		"body": [
			"\"\"\"",
			"${1:Modulos}, vistas",
			"\"\"\"",
			"import json",
			"from flask import Blueprint, flash, redirect, render_template, request, url_for",
			"from flask_login import current_user, login_required",
			"",
			"from lib.datatables import get_datatable_parameters, output_datatable_json",
			"from lib.safe_string import safe_string, safe_message",
			"",
			"from plataforma_web.blueprints.bitacoras.models import Bitacora",
			"from plataforma_web.blueprints.modulos.models import Modulo",
			"from plataforma_web.blueprints.permisos.models import Permiso",
			"from plataforma_web.blueprints.usuarios.decorators import permission_required",
			"from plataforma_web.blueprints.${3:blueprint}.models import ${4:Clase}",
			"",
			"MODULO = \"${2:MODULO}\"",
			"",
			"${3:blueprint} = Blueprint('${3:blueprint}', __name__, template_folder='templates')",
			"",
			"",
			"@${3:blueprint}.before_request",
			"@login_required",
			"@permission_required(MODULO, Permiso.VER)",
			"def before_request():",
			"\t\"\"\" Permiso por defecto \"\"\"",
			"",
			""
		],
		"description": "Contenido inicial"
	},
	"Flask views detail": {
		"scope": "python",
		"prefix": "fviews_detail",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/<int:${2:columna_id}>')",
			"def detail(${2:columna_id}):",
			"\t\"\"\" Detalle de un ${3:Modulo} \"\"\"",
			"\t${4:registro} = ${5:Class}.query.get_or_404(${2:columna_id})",
			"\treturn render_template('${1:blueprint}/detail.jinja2', ${4:registro}=${4:registro})",
			"",
			""
		],
		"description": "Vista detalle"
	},
	"Flask views new": {
		"scope": "python",
		"prefix": "fviews_new",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/nuevo', methods=['GET', 'POST'])",
			"@permission_required(MODULO, Permiso.CREAR)",
			"def new():",
			"\t\"\"\" Nuevo ${2:Modulo} \"\"\"",
			"\tform = ${3:ClassForm}()",
			"\tif form.validate_on_submit():",
			"\t\t${4:instance} = ${5:Class}(${6:nombre_o_descripcion}=safe_string(form.${6:nombre_o_descripcion}.data))",
			"\t\t${4:instance}.save()",
			"\t\tbitacora = Bitacora(",
			"\t\t\tmodulo=Modulo.query.filter_by(nombre=MODULO).first(),",
			"\t\t\tusuario=current_user,",
			"\t\t\tdescripcion=safe_message(f\"Nuevo ${2:Modulo} {${4:instance}.${6:nombre_o_descripcion}}\"),",
			"\t\t\turl=url_for(\"${1:blueprint}.detail\", ${4:instance}_id=${4:instance}.id),",
			"\t\t)",
			"\t\tbitacora.save()",
			"\t\tflash(bitacora.descripcion, \"success\")",
			"\t\treturn redirect(bitacora.url)",
			"\treturn render_template('${1:blueprint}/new.jinja2', form=form)",
			"",
			""
		],
		"description": "Vista nuevo registro"
	},
	"Flask views edit": {
		"scope": "python",
		"prefix": "fviews_edit",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/edicion/<int:${2:column_id}>', methods=['GET', 'POST'])",
			"@permission_required(MODULO, Permiso.MODIFICAR)",
			"def edit(${2:column_id}):",
			"\t\"\"\" Editar ${3:Modulo} \"\"\"",
			"\t${4:instance} = ${5:Class}.query.get_or_404(${2:column_id})",
			"\tform = ${6:ClassForm}()",
			"\tif form.validate_on_submit():",
			"\t\t${4:instance}.${7:nombre_o_descripcion} = safe_string(form.${7:nombre_o_descripcion}.data)",
			"\t\t${4:instance}.save()",
			"\t\tbitacora = Bitacora(",
			"\t\t\tmodulo=Modulo.query.filter_by(nombre=MODULO).first(),",
			"\t\t\tusuario=current_user,",
			"\t\t\tdescripcion=safe_message(f\"Editado ${3:Modulo} {${4:instance}.${7:nombre_o_descripcion}}\"),",
			"\t\t\turl=url_for(\"${1:blueprint}.detail\", ${4:instance}_id=${4:instance}.id),",
			"\t\t)",
			"\t\tbitacora.save()",
			"\t\tflash(bitacora.descripcion, \"success\")",
			"\t\treturn redirect(bitacora.url)",
			"\tform.${7:nombre_o_descripcion}.data = ${4:instance}.${7:nombre_o_descripcion}",
			"\treturn render_template('${1:blueprint}/edit.jinja2', form=form, ${4:instance}=${4:instance})",
			"",
			""
		],
		"description": "Vista editar registro"
	},
	"Flask views delete": {
		"scope": "python",
		"prefix": "fviews_delete",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/eliminar/<int:${2:column_id}>')",
			"@permission_required(MODULO, Permiso.MODIFICAR)",
			"def delete(${2:column_id}):",
			"\t\"\"\" Eliminar ${3:Modulo} \"\"\"",
			"\t${4:instance} = ${5:Class}.query.get_or_404(${2:column_id})",
			"\tif ${4:instance}.estatus == 'A':",
			"\t\t${4:instance}.delete()",
			"\t\tbitacora = Bitacora(",
			"\t\t\tmodulo=Modulo.query.filter_by(nombre=MODULO).first(),",
			"\t\t\tusuario=current_user,",
			"\t\t\tdescripcion=safe_message(f\"Eliminado ${3:Modulo} {${4:instance}.${6:nombre_o_descripcion}}\"),",
			"\t\t\turl=url_for(\"${1:blueprint}.detail\", ${4:instance}_id=${4:instance}.id),",
			"\t\t)",
			"\t\tbitacora.save()",
			"\t\tflash(bitacora.descripcion, \"success\")",
			"\treturn redirect(url_for('${1:blueprint}.detail', ${2:column_id}=${4:instance}.id))",
			"",
			""
		],
		"description": "Vista borrar registro"
	},
	"Flask views recover": {
		"scope": "python",
		"prefix": "fviews_recover",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/recuperar/<int:${2:column_id}>')",
			"@permission_required(MODULO, Permiso.MODIFICAR)",
			"def recover(${2:column_id}):",
			"\t\"\"\" Recuperar ${3:Modulo} \"\"\"",
			"\t${4:instance} = ${5:Class}.query.get_or_404(${2:column_id})",
			"\tif ${4:instance}.estatus == 'B':",
			"\t\t${4:instance}.recover()",
			"\t\tbitacora = Bitacora(",
			"\t\t\tmodulo=Modulo.query.filter_by(nombre=MODULO).first(),",
			"\t\t\tusuario=current_user,",
			"\t\t\tdescripcion=safe_message(f\"Recuperado ${3:Modulo} {${4:instance}.${6:nombre_o_descripcion}}\"),",
			"\t\t\turl=url_for(\"${1:blueprint}.detail\", ${4:instance}_id=${4:instance}.id),",
			"\t\t)",
			"\t\tbitacora.save()",
			"\t\tflash(bitacora.descripcion, \"success\")",
			"\treturn redirect(url_for('${1:blueprint}.detail', ${2:column_id}=${4:instance}.id))",
			"",
			""
		],
		"description": "Vista recuperar registro"
	}
}
