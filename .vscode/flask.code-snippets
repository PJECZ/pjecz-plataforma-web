{
	"Flask views top": {
		"scope": "python",
		"prefix": "fviewstop",
		"body": [
			"from flask import Blueprint, flash, redirect, render_template, url_for",
			"from flask_login import login_required",
			"from ${1:web_system}.blueprints.roles.models import Permiso",
			"from ${1:web_system}.blueprints.usuarios.decorators import permission_required",
			"",
			""
		],
		"description": "Cargar paquetes"
	},
	"Flask views blueprint": {
		"scope": "python",
		"prefix": "fviewsblueprint",
		"body": "${1:blueprint} = Blueprint('${1:blueprint}', __name__, template_folder='templates')",
		"description": "Blueprint"
	},
	"Flask views permission": {
		"scope": "python",
		"prefix": "fviewspermission",
		"body": [
			"@${1:blueprint}.before_request",
			"@login_required",
			"@permission_required(Permiso.OBSERVADOR)",
			"def before_request():",
			"\tpass",
			"",
			""
		],
		"description": "Permiso por defecto para las vistas que siguen"
	},
	"Flask views list_active": {
		"scope": "python",
		"prefix": "fviewslistactive",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}')",
			"def list_active():",
			"\t\"\"\" Listado de ${2:descripcion} \"\"\"",
			"\t${3:registros}_activos = ${4:Clase}.query.filter(${4:Clase}.estatus == 'A').all()",
			"\treturn render_template('${1:blueprint}/list.jinja2', ${3:registros}=${3:registros}_activos)",
			"",
			""
		],
		"description": "Listado de registros activos"
	},
	"Flask views detail": {
		"scope": "python",
		"prefix": "fviewsdetail",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/<int:${2:columna_id}>')",
			"def detail(${2:columna_id}):",
			"\t\"\"\" Detalle de un ${3:descripcion} \"\"\"",
			"\t${4:registro} = ${5:Class}.query.get_or_404(${2:columna_id})",
			"\treturn render_template('${1:blueprint}/detail.jinja2', ${4:registro}=${4:registro})",
			"",
			""
		],
		"description": "Detalle de un registro"
	},
	"Flask views new": {
		"scope": "python",
		"prefix": "fviewsnew",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/nuevo', methods=['GET', 'POST'])",
			"@permission_required(Permiso.CREAR_XXXXXXXX)",
			"def new():",
    		"\t\"\"\" Nuevo ${2:description} \"\"\"",
    		"\tform = ${3:ClassForm}()",
    		"\tif form.validate_on_submit():",
        	"\t\t${4:instance} = ${5:Class}(nombre=form.nombre.data)",
        	"\t\t${4:instance}.save()",
        	"\t\tflash(f'${2:description} {${4:instance}.nombre} guardado.', 'success')",
        	"\t\treturn redirect(url_for('${1:blueprint}.list_active'))",
    		"\treturn render_template('${1:blueprint}/new.jinja2', form=form)",
			"",
			""
		],
		"description": "Nuevo registro"
	},
	"Flask views edit": {
		"scope": "python",
		"prefix": "fviewsedit",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/edicion/<int:${2:column_id}>', methods=['GET', 'POST'])",
			"@permission_required(Permiso.MODIFICAR_XXXXXXXX)",
			"def edit(${2:column_id}):",
		    "\t\"\"\" Editar ${3:description} \"\"\"",
			"\t${4:instance} = ${5:Class}.query.get_or_404(${2:column_id})",
    		"\tform = ${6:ClassForm}()",
    		"\tif form.validate_on_submit():",
        	"\t\t${4:instance}.nombre = form.nombre.data",
        	"\t\t${4:instance}.save()",
        	"\t\tflash(f'${3:description} {${4:instance}.nombre} guardado.', 'success')",
        	"\t\treturn redirect(url_for('${1:blueprint}.detail', ${2:column_id}=${4:instance}.id))",
    		"\tform.nombre.data = ${4:instance}.nombre",
    		"\treturn render_template('${1:blueprint}/edit.jinja2', form=form, ${4:instance}=${4:instance})",
			"",
			""
		],
		"description": "Editar registro"
	},
	"Flask views delete": {
		"scope": "python",
		"prefix": "fviewsdelete",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/eliminar/<int:${2:column_id}>')",
			"@permission_required(Permiso.MODIFICAR_XXXXXXXX)",
			"def delete(${2:column_id}):",
			"\t\"\"\" Eliminar ${3:description} \"\"\"",
			"\t${4:instance} = ${5:Class}.query.get_or_404(${2:column_id})",
			"\tif ${4:instance}.estatus == 'A':",
			"\t\t${4:instance}.delete()",
			"\t\tflash(f'${3:description} {${4:instance}.nombre} eliminado.', 'success')",
			"\treturn redirect(url_for('${1:blueprint}.detail', ${2:column_id}=${2:column_id}))",
			"",
			""
		],
		"description": "Borrar registro"
	},
	"Flask views recover": {
		"scope": "python",
		"prefix": "fviewsrecover",
		"body": [
			"@${1:blueprint}.route('/${1:blueprint}/recuperar/<int:${2:column_id}>')",
			"@permission_required(Permiso.MODIFICAR_XXXXXXXX)",
			"def recover(${2:column_id}):",
			"\t\"\"\" Recuperar ${3:description} \"\"\"",
			"\t${4:instance} = ${5:Class}.query.get_or_404(${2:column_id})",
			"\tif ${4:instance}.estatus == 'B':",
			"\t\t${4:instance}.recover()",
			"\t\tflash(f'${3:description} {${4:instance}.nombre} recuperado.', 'success')",
			"\treturn redirect(url_for('${1:blueprint}.detail', ${2:column_id}=${2:column_id}))",
			"",
			""
		],
		"description": "Recuperar registro"
	},
	"Flask models top": {
		"scope": "python",
		"prefix": "fmodelstop",
		"body": [
			"from ${1:web_system}.extensions import db",
			"from lib.universal_mixin import UniversalMixin",
			"",
			""
		],
		"description": "Cargar paquetes"
	},
	"Flask models model": {
		"scope": "python",
		"prefix": "fmodelsmodel",
		"body": [
			"class ${1:Class}(db.Model, UniversalMixin):",
			"\t\"\"\" ${1:Class} \"\"\"",
			"",
			"\t# Nombre de la tabla",
			"\t__tablename__ = '${2:table}'",
			"",
			"\t# Clave primaria",
			"\tid = db.Column(db.Integer, primary_key=True)",
			"",
			"\t# Columnas",
			"\tnombre = db.Column(db.String(256), unique=True, nullable=False)",
			"\tdescripcion = db.Column(db.String(256), nullable=False)",
			"",
			"\tdef __repr__(self):",
			"\t\t\"\"\" Representación \"\"\"",
			"\t\treturn f'<${1:Class} {self.nombre}>'",
			"",
			""
		],
		"description": "Modelo"
	},
	"Flask models foreign key": {
		"scope": "python",
		"prefix": "fmodelsforeignkey",
		"body": [
			"# Clave foránea",
			"${1:column}_id = db.Column(",
			"\t'${1:column}',",
			"\tdb.Integer,",
			"\tdb.ForeignKey('${2:table}.id'),",
			"\tindex=True,",
			"\tnullable=False",
			")",
			""
		],
		"description": "Clave foránea"
	},
	"Flask models child": {
		"scope": "python",
		"prefix": "fmodelschild",
		"body": "${1:plural} = db.relationship('${2:Name}', backref='${3:column}')",
		"description": "Hijo"
	},
	"Flask forms top": {
		"scope": "python",
		"prefix": "fformstop",
		"body": [
			"from flask_wtf import FlaskForm",
			"from wtforms import HiddenField, PasswordField, StringField, SubmitField",
			"from wtforms.ext.sqlalchemy.fields import QuerySelectField",
			"from wtforms.validators import DataRequired, Email, EqualTo, Length, Optional",
			"",
			""
		],
		"description": "Cargar paquetes"
	},
	"Flask forms form": {
		"scope": "python",
		"prefix": "fformsform",
		"body": [
			"class ${1:ClassForm}(FlaskForm):",
			"\t\"\"\" Formulario ${2:description} \"\"\"",
			"\tnombre = StringField('Nombre', validators=[DataRequired(), Length(max=256)])",
			"\tguardar = SubmitField('Guardar')",
			"",
			""
		],
		"description": "Formulario"
	},
	"Jinja2 detail": {
		"scope": "jinja-html",
		"prefix": "j2detail",
		"body": [
			"{% extends 'layouts/app.jinja2' %}",
			"{% import 'macros/detail.jinja2' as detail with context %}",
			"",
			"{% block title %}${1:Titulo}{% endblock %}",
			"",
			"{% block content %}",
			"\t{{ detail.page_breadcrumb('${1:Titulo}') }}",
			"\t<div class=\"container-fluid\">",
			"\t\t{% call detail.card() %}",
			"\t\t\t{{ detail.label_value_big('${1:Titulo}', ${2:instancia}.${3:nombre_o_descripcion}) }}",
			"\t\t{% endcall %}",
			"\t</div>",
			"{% endblock %}",
			""
		],
		"description": "Plantilla detail.jinja2"
	},
	"Jinja2 detail delete recover": {
		"scope": "jinja-html",
		"prefix": "j2detaildeleterecover",
		"body": [
			"{% extends 'layouts/app.jinja2' %}",
			"{% import 'macros/detail.jinja2' as detail with context %}",
			"",
			"{% block title %}${1:Titulo}{% endblock %}",
			"",
			"{% block topbar_actions %}",
			"\t{% call detail.topbar_actions() %}",
			"\t\t{% if current_user.can_edit('${2:blueprint}') %}",
			"\t\t\t{{ detail.topbar_actions_option('Editar', url_for('${2:blueprint}.edit', ${3:instancia}_id=${3:instancia}.id)) }}",
			"\t\t\t{% if ${3:instancia}.estatus == 'A' %}{{ detail.topbar_actions_option('Eliminar', 'javascript:showModalDelete()') }}{% endif %}",
			"\t\t\t{% if ${3:instancia}.estatus == 'B' %}{{ detail.topbar_actions_option('Recuperar', 'javascript:showModalRecover()') }}{% endif %}",
			"\t\t{% endif %}",
			"\t{% endcall %}",
			"{% endblock %}",
			"",
			"{% block content %}",
			"\t{{ detail.page_breadcrumb('${1:Titulo}') }}",
			"\t<div class=\"container-fluid\">",
			"\t\t{% call detail.card(estatus=${3:instancia}.estatus) %}",
			"\t\t\t{{ detail.label_value_big('${1:Titulo}', ${3:instancia}.${4:nombre_o_descripcion}) }}",
			"\t\t{% endcall %}",
			"\t</div>",
			"\t{% if current_user.can_edit('${2:blueprint}') %}",
			"\t\t{{ detail.modal('Eliminar', '¿Eliminar a ' + ${3:instancia}.${4:nombre_o_descripcion} + '?', 'modalDelete', url_for('${2:blueprint}.delete', ${3:instancia}_id=${3:instancia}.id)) }}",
			"\t\t{{ detail.modal('Recuperar', '¿Recuperar a ' + ${3:instancia}.${4:nombre_o_descripcion} + '?', 'modalRecover', url_for('${2:blueprint}.recover', ${3:instancia}_id=${3:instancia}.id)) }}",
			"\t{% endif %}",
			"{% endblock %}",
			"",
			"{% block custom_javascript %}",
			"\t{% if current_user.can_edit('${2:blueprint}') %}",
			"\t\t{{ detail.custom_javascript_delete_recover() }}",
			"\t{% endif %}",
			"{% endblock %}",
			""
		],
		"description": "Plantilla detail.jinja2 acciones eliminar y recuperar"
	},
	"Jinja2 edit": {
		"scope": "jinja-html",
		"prefix": "j2edit",
		"body": [
			"{% extends 'layouts/app.jinja2' %}",
			"{% import 'macros/form.jinja2' as f with context %}",
			"",
			"{% block title %}Editar ${1:Titulo}{% endblock %}",
			"",
			"{% block content %}",
			"\t{{ f.page_breadcrumb('Editar ' + ${2:instancia}.${3:nombre_o_descripcion}) }}",
			"\t\t<div class=\"container-fluid\">",
			"\t\t{% set form_kwargs = {'${2:instancia}_id': ${2:instancia}.id} %}",
			"\t\t{% call f.form_tag('${4:blueprint}.edit', fid='${2:instancia}_form', **form_kwargs) %}",
			"\t\t\t{% call f.form_group(form.${3:nombre_o_descripcion}) %}{% endcall %}",
			"\t\t\t{{ form.guardar() }}",
			"\t\t{% endcall %}",
			"\t</div>",
			"{% endblock %}",
			""
		],
		"description": "Plantilla edit.jinja2"
	},
	"Jinja2 list":{
		"scope": "jinja-html",
		"prefix": "j2list",
		"body": [
			"{% extends 'layouts/app.jinja2' %}",
			"{% import 'macros/list.jinja2' as list with context %}",
			"",
			"{% block title %}${1:Titulo}{% endblock %}",
			"",
			"{% block content %}",
			"\t{{ list.page_breadcrumb('${1:Titulo}') }}",
			"\t<div class=\"container-fluid\">",
			"\t\t{% call list.card() %}",
			"\t\t\t<table id=\"${2:blueprint}_datatable\" class=\"table\">",
			"\t\t\t\t<thead>",
			"\t\t\t\t\t<tr>",
			"\t\t\t\t\t\t<th>${1:Titulo}</th>",
			"\t\t\t\t\t</tr>",
			"\t\t\t\t</thead>",
			"\t\t\t\t<tbody>",
			"\t\t\t\t\t{% for ${3:registro} in ${4:registros} %}",
			"\t\t\t\t\t<tr>",
			"\t\t\t\t\t\t<td><a href=\"{{ url_for('${2:blueprint}.detail', ${3:registro}_id=${3:registro}.id) }}\">{{ ${3:registro}.${5:nombre_o_descripcion} }}</a></td>",
			"\t\t\t\t\t</tr>",
			"\t\t\t\t\t{% endfor %}",
			"\t\t\t\t</tbody>",
			"\t\t\t</table>",
			"\t\t{% endcall %}",
			"\t</div>",
			"{% endblock %}",
			"",
			"{% block custom_javascript %}",
			"\t<script>",
			"\t\t$('#${2:blueprint}_datatable').DataTable();",
			"\t</script>",
			"{% endblock %}",
			""
		],
		"description": "Plantilla list.jinja2"
	},
	"Jinja2 list new":{
		"scope": "jinja-html",
		"prefix": "j2listnew",
		"body": [
			"{% extends 'layouts/app.jinja2' %}",
			"{% import 'macros/list.jinja2' as list with context %}",
			"",
			"{% block title %}${1:Titulo}{% endblock %}",
			"",
			"{% block topbar_actions %}",
			"\t{% if current_user.can_insert('${2:blueprint}') %}",
			"\t\t{% call list.topbar_actions() %}",
			"\t\t\t{{ list.topbar_actions_option('Nuevo ${1:Titulo}', url_for('${2:blueprint}.new')) }}",
			"\t\t{% endcall %}",
			"\t{% endif %}",
			"{% endblock %}",
			"",
			"{% block content %}",
			"\t{{ list.page_breadcrumb('${1:Titulo}') }}",
			"\t<div class=\"container-fluid\">",
			"\t\t{% call list.card() %}",
			"\t\t\t<table id=\"${2:blueprint}_datatable\" class=\"table\">",
			"\t\t\t\t<thead>",
			"\t\t\t\t\t<tr>",
			"\t\t\t\t\t\t<th>${1:Titulo}</th>",
			"\t\t\t\t\t</tr>",
			"\t\t\t\t</thead>",
			"\t\t\t\t<tbody>",
			"\t\t\t\t\t{% for ${3:registro} in ${4:registros} %}",
			"\t\t\t\t\t<tr>",
			"\t\t\t\t\t\t<td><a href=\"{{ url_for('${2:blueprint}.detail', ${3:registro}_id=${3:registro}.id) }}\">{{ ${3:registro}.${5:nombre_o_descripcion} }}</a></td>",
			"\t\t\t\t\t</tr>",
			"\t\t\t\t\t{% endfor %}",
			"\t\t\t\t</tbody>",
			"\t\t\t</table>",
			"\t\t{% endcall %}",
			"\t</div>",
			"{% endblock %}",
			"",
			"{% block custom_javascript %}",
			"\t<script>",
			"\t\t$('#${2:blueprint}_datatable').DataTable();",
			"\t</script>",
			"{% endblock %}",
			""
		],
		"description": "Plantilla list.jinja2 acción nuevo"
	},
	"Jinja2 new": {
		"scope": "jinja-html",
		"prefix": "j2new",
		"body": [
			"{% extends 'layouts/app.jinja2' %}",
			"{% import 'macros/form.jinja2' as f with context %}",
			"",
			"{% block title %}Nuevo ${1:Titulo}{% endblock %}",
			"",
			"{% block content %}",
			"\t{{ f.page_breadcrumb('Nuevo ${1:Titulo}') }}",
			"\t<div class=\"container-fluid\">",
			"\t\t{% call f.form_tag('${2:blueprint}.new', fid='${3:registro}_form') %}",
			"\t\t\t{% call f.form_group(form.nombre) %}{% endcall %}",
			"\t\t\t{{ form.guardar() }}",
			"\t\t{% endcall %}",
			"\t</div>",
			"{% endblock %}",
			""
		],
		"description": "Plantilla new.jinja2"
	},
}
