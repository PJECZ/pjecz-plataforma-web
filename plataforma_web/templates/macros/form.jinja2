{%- macro page(label) -%}
    <div class="page-breadcrumb">
        <div class="row">
            <div class="col-12 d-flex no-block align-items-center">
                <h4 class="page-title">{{ label }}</h4>
            </div>
        </div>
    </div>
{%- endmacro -%}

{%- macro page_breadcrumb(label) -%}
    <div class="page-breadcrumb">
        <div class="row">
            <div class="col-12 d-flex no-block align-items-center">
                <h4 class="page-title">{{ caller () }}{{ label }}</h4>
            </div>
        </div>
    </div>
{%- endmacro -%}

{%- macro page_breadcrumb_item(label, link='') -%}
    <a href="{{ link }}">{{ label }}</a> /
{%- endmacro -%}

{# card sirve para contener algo; es necesario para que las tablas sean usables en pantallas chicas #}}
{%- macro card() -%}
    <div class="card">
        <div class="card-body">
            {{ caller () }}
        </div>
    </div>
{%- endmacro -%}

{# botón submit #}
{%- macro submit_button(f, etiqueta) -%}
    <button type="submit" class="btn btn-primary">{{ etiqueta }}</button>
{%- endmacro -%}

{# etiqueta con texto de ayuda #}
{%- macro field_label(f) -%}
    <label for="{{ f.id }}">
    {%- if f.flags.required -%}
        <strong>{{ f.label.text }}</strong>
    {%- else %}
        {{ f.label.text }}
    {%- endif %}
    </label>
{%- endmacro -%}

{# errores de validación si los hay #}
{%- macro field_errors(f) -%}
    {% if f.errors %}
        <ul class="list-unstyled text-danger field-error">
            {% for error in f.errors %}
                <li>{{ error | e }}</li>
            {% endfor %}
        </ul>
    {% endif %}
{%- endmacro -%}

{# un campo del formulario #}
{%- macro field(f, css_class='form-control') -%}
    {% if f.type == 'HiddenField' %}
        {{ f.description }}
        {{ f(class=css_class, **kwargs) }}
    {% elif f.type == 'DateField'  %}
        {{ f(class=css_class, type='date', **kwargs) }}
    {% elif f.type == 'DateTimeField'  %}
        {{ f(class=css_class, type='datetime', **kwargs) }}
    {% else %}
        {{ f(class=css_class, **kwargs) }}
    {% endif %}
{%- endmacro -%}

{# un campo de opción múltiple #}
{%- macro checkbox_field(f) -%}
    {{ f(type='checkbox', **kwargs) }} {{ f.label }}
{%- endmacro -%}

{# un grupo de un formulario, con errores si los hay #}
{%- macro form_group(f, css_class='') -%}
    {% if f.errors %}
        {% set css_class = css_class + ' has-error ' + kwargs.pop('class', '') %}
    {% endif %}
    {% if f.type == 'BooleanField' %}
        <div class="checkbox {{ css_class }}">
        {{ checkbox_field(f, **kwargs) }}
    {% else %}
        <div class="form-group {{ css_class }}">
        {{ field_label(f) }}
        {{ field(f, **kwargs) }}
    {% endif %}
    {{ field_errors(f) }}
    {{ caller () }}
    </div>
{%- endmacro %}

{# un formulario, que contiene un token CSRF y campos ocultos #}
{%- macro form_tag(endpoint, fid='', css_class='', method='post') -%}
    <form action="{{ url_for(endpoint, **kwargs) }}" method="{{ method }}" id="{{ fid }}" class="{{ css_class }}" role="form">
        {{ form.hidden_tag() }}
        {{ caller () }}
    </form>
{%- endmacro -%}

{# un formulario, que contiene un token CSRF y campos ocultos #}
{%- macro form_tag_multipart(endpoint, fid='', css_class='', method='post') -%}
    <form action="{{ url_for(endpoint, **kwargs) }}" method="{{ method }}" id="{{ fid }}" class="{{ css_class }}" role="form" enctype="multipart/form-data">
        {{ form.hidden_tag() }}
        {{ caller () }}
    </form>
{%- endmacro -%}

{# javascript para combo distrito/autoridad #}
{%- macro js_select_distrito_autoridad(distritos, autoridades, mi_distrito=-1, mi_autoridad=-1) -%}
    <!-- Combo distrito/autoridad -->
    <script>
        let distritos = [];
        let autoridades = [];
        let mi_distrito = {{ mi_distrito }};
        let mi_autoridad = {{ mi_autoridad }};
        $(document).ready(function() {
            // Función
            function cambiarAutoridadesSelect(distrito_id) {
                autoridades.forEach(function(item) {
                    if (item.distrito_id == distrito_id) {
                        $('#autoridad').append($('<option>', { value: item.id, text: item.descripcion }));
                    }
                });
            }
            // Cargar distritos
            {% for distrito in distritos %}
            distritos.push({ id: {{ distrito.id }}, nombre: "{{ distrito.nombre }}" });
            {% endfor %}
            // Cargar autoridades
            {% for autoridad in autoridades %}
            autoridades.push({ distrito_id: {{ autoridad.distrito_id }}, id: {{ autoridad.id }}, descripcion: "{{ autoridad.descripcion }}" });
            {% endfor %}
            // Opciones select de distritos
            distritos.forEach( 
                item => $('#distrito').append($('<option>', { value: item.id, text: item.nombre })) 
            );
            // Pendiente seleccionar mi_distrito y mi_autoridad
            if (mi_distrito == -1) mi_distrito = distritos[0].id;
            // De inicio, poner las opciones en el select de autoridades
            cambiarAutoridadesSelect(mi_distrito);
            // Al cambiar el select distrito, cambiar las opciones de autoridad
            $('#distrito').change(function() {
                $('#autoridad').empty();
                cambiarAutoridadesSelect($('#distrito').val());
            });
        });
    </script>
{%- endmacro -%}

{# JavaScript Datatable #}
{%- macro datatable(table_id, order="asc") -%}
    <script>
        $('#{{ table_id }}').DataTable({
            {% if order == "asc" %}order: [[ 0, "asc" ]],{% endif %}
            {% if order == "desc" %}order: [[ 0, "desc" ]],{% endif %}
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Página _PAGE_ de _PAGES_",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        });
    </script>
{%- endmacro -%}

{# Drop Zone CSS #}}
{%- macro drop_zone_css() -%}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/dropzone.css') }}" type="text/css">
{%- endmacro -%}

{# Drop Zone wrapper #}}
{%- macro drop_zone_wrapper() -%}
    <div class="dropzone-wrapper mb-3">
        <div class="dropzone-desc">
            <p id="name_file_upload">
                Adjunta el documento ó arrastralo. <br>
                <i class="fas fa-upload"></i>
            </p>
        </div>
        {{ caller () }}
    </div>
{%- endmacro -%}

{# Drop Zone javascript #}}
{%- macro drop_zone_js() -%}
    <script>
        $(document).ready(function(){
            $(".dropzone").change(function() {
                readFile(this);
            });
            function readFile(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        var htmlPreview = input.files[0].name;
                        $("#name_file_upload").html('<i class="fa fa-file"></i>  ' + htmlPreview);
                    };
                    reader.readAsDataURL(input.files[0]);
                }
            }
        });
    </script>
{%- endmacro -%}
