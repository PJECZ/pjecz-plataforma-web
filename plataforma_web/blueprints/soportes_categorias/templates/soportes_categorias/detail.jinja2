{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}
{% import 'macros/list.jinja2' as list %}

{% block title %}Soporte Categoría{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(soporte_categoria.nombre) %}
        {{ topbar.button_previous('Soportes Categorías', url_for('soportes_categorias.list_active')) }}
        {% if current_user.can_edit('SOPORTES CATEGORIAS') %}
            {{ topbar.button_edit('Editar', url_for('soportes_categorias.edit', soporte_categoria_id=soporte_categoria.id)) }}
            {% if soporte_categoria.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('soportes_categorias.delete', soporte_categoria_id=soporte_categoria.id)) }}{% endif %}
            {% if soporte_categoria.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('soportes_categorias.recover', soporte_categoria_id=soporte_categoria.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=soporte_categoria.estatus) %}
        {{ detail.label_value_big('Nombre', soporte_categoria.nombre) }}
        {{ detail.label_value('Atendido por', soporte_categoria.rol.nombre) }}
        {{ detail.label_value('Departamento', soporte_categoria.departamento) }}
        <div class="row">
            <div class="col-md-3 text-end">Instrucciones</div>
            <div class="col-md-9">
                <pre>{{ soporte_categoria.instrucciones }}</pre>
            </div>
        </div>
    {% endcall %}
    {% if current_user.can_admin('SOPORTES CATEGORIAS') %}
        {% call list.card('Tickets') %}
            <table id="soportes_tickets_datatable" class="table display nowrap" style="width:100%;">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Creación</th>
                        <th>Usuario</th>
                        <th>Oficina</th>
                        <th>Estado</th>
                        <th>Técnico</th>
                        <th>Descripción</th>
                        <th>Solución/Cancelación</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_edit('SOPORTES CATEGORIAS') %}
        {% if soporte_categoria.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + soporte_categoria.nombre + '?') }}{% endif %}
        {% if soporte_categoria.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + soporte_categoria.nombre + '?') }}{% endif %}
    {% endif %}
    {% if current_user.can_edit('SOPORTES CATEGORIAS') %}
    <script>
        $('#soportes_tickets_datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            searching: false,
            responsive: true,
            scrollX: true,
            ajax: {
                url: "/soportes_tickets/datatable_json",
                type: "POST",
                headers: { "X-CSRF-TOKEN": "{{ csrf_token() }}" },
                dataType: "json",
                dataSrc: "data",
                data: { "estatus": "A", "soporte_categoria_id": "{{soporte_categoria.id}}" }
            },
            columns: [
                { data: "id" },
                { data: "creacion" },
                { data: "usuario" },
                { data: "oficina" },
                { data: "estado" },
                { data: "tecnico" },
                { data: "descripcion" },
                { data: "soluciones" }
            ],
            columnDefs: [
                {
                    targets: 0, // ID
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1, // Creación
                    type: "date",
                    render: function(data, type, row, meta) {
                        return moment.utc(data).local().format("YYYY-MM-DD HH:mm a");
                    }
                },
                {
                    targets: [2, 5], // Usuario, Técnico
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.nombre.length > 24)
                            texto = '<span title="' + data.nombre + '">' + data.nombre.substr(0, 24) + '…' + '</span>';
                        else
                            texto = data.nombre;
                        if (data.url == '')
                            return texto;
                        else
                            return '<a href="' + data.url + '">' + texto + '</a>';
                    }
                },
                {
                    targets: 3, // Oficina
                    data: null,
                    render: function(data, type, row, meta) {
                        texto = '<span title="' + data.nombre + '">' + data.clave + '</span>';
                        if (data.url == '')
                            return texto;
                        else
                            return '<a href="' + data.url + '">' + texto + '</a>';
                    }
                },
                {
                    targets: [6, 7],
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data != null)
                            if (data.length > 24) {
                                return '<span title="' + data + '">' + data.substr(0, 24) + '…' + '</span>';
                            } else {
                                return data;
                            }
                        return '—';
                    }
                },
            ],
            rowCallback: function( row, data ){
                switch (data.estado)    {
                    case "SIN ATENDER":     $(row).css("background-color", "#fef9e7");  break;
                    case "TRABAJANDO":      $(row).css("background-color", "#ebf5fb");  break;
                    case "CANCELADO":       $(row).css("background-color", "#fdedec");  break;
                    case "PENDIENTE":       $(row).css("background-color", "#f5eef8");  break;
                    case "TERMINADO":       $(row).css("background-color", "#eafaf1");  break;
                    case "CERRADO":         $(row).css("background-color", "#eceff1");  break;
                }
            },
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        });
    </script>
    {% endif %}
{% endblock %}
