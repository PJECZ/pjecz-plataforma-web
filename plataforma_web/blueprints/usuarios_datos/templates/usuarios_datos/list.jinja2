{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Usuario Datos{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
        <!-- Formulario de filtros -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="buscadorForm" onsubmit="filtros_usuarios_datos.buscar(); return false;">
                    <div class="col-3">
                        <div class="form-floating">
                            <input id="nombreInput" type="text" class="form-control" aria-label="Nombre" aria-describedby="button-buscar" onchange="filtros_usuarios_datos.buscar(); return false;" style="text-transform: uppercase;">
                            <label for="nombreInput">Nombre</label>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-floating">
                            <input id="curpInput" type="text" class="form-control" aria-label="Curp" aria-describedby="button-buscar" onchange="filtros_usuarios_datos.buscar(); return false;" style="text-transform: uppercase;">
                            <label for="curpInput">CURP</label>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-floating">
                            <select class="form-select" id="campoSelect" name="campoSelect" aria-label="Todas" onchange="filtros_usuarios_datos.buscar(); return false;" style="flex: inherit;">
                                <option selected value=""></option>
                                {% for campo in campos %}
                                    <option value="{{campo}}">{{campo}}</option>
                                {% endfor %}
                            </select>
                            <label for="campoSelect">Campo</label>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-floating">
                            <select class="form-select" id="estadoSelect" name="estadoSelect" aria-label="Todas" onchange="filtros_usuarios_datos.buscar(); return false;" style="flex: inherit;">
                                <option selected value=""></option>
                                {% for estado in estados %}
                                    <option value="{{estado}}">{{estado}}</option>
                                {% endfor %}
                            </select>
                            <label for="estadoSelect">Estado</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtros_usuarios_datos.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtros_usuarios_datos.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Datatable -->
        <table id="usuarios_datos_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Fecha</th>
                    <th>Datos personales de</th>
                    <th>Email</th>
                    <th>CURP</th>
                    <th>Estado</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    !-- Importación de la configuración para DataTables -->
    <script src="/static/js/datatables_config.js"></script>
    <!-- Importación de los fitlros para dataTable -->
    <script src="/static/js/datatables_filtros.js"></script>
    <script>
        const dataTable_usuarios_datos = new ConfigDataTable( "{{ csrf_token() }}" );
        let configDataTable_usuarios_datos = dataTable_usuarios_datos.config;
        configDataTable_usuarios_datos['ajax']['url'] = '/usuarios_datos/datatable_json';
        configDataTable_usuarios_datos['ajax']['data'] = {{ filtros }};
        configDataTable_usuarios_datos['columns'] = [
            { data: 'fecha' },
            { data: 'nombre' },
            { data: 'email' },
            { data: 'curp' },
            { data: 'estado' }
        ];
        configDataTable_usuarios_datos['columnDefs'] = [
            {
                targets: 1, // nombre
                data: null,
                render: function(data, type, row, meta) {
                    return dataTable_usuarios_datos.texto_con_url(data.nombre, data.url);
                }
            },
            {
                targets: 4, // estado
                data: null,
                render: function(data, type, row, meta) {
                    let bgcolor = "";
                    switch (data)    {
                        case "POR VALIDAR": bgcolor = "bg-warning text-dark"; break;
                        case "NO VALIDO":   bgcolor = "bg-danger";      break;
                        case "VALIDO":      bgcolor = "bg-success";     break;
                        case "INCOMPLETO":
                        default:            bgcolor = "bg-secondary";   
                                            data = "INCOMPLETO";        break;
                    }
                    return '<span class="badge rounded-pill ' + bgcolor + '">' + data + '</span>';
                }
            }
        ];

        // Declaración de los Filtros utilizados
        // Creación del Objeto manejador de Filtros
        const filtros_usuarios_datos = new Filtros('#usuarios_datos_datatable', configDataTable_usuarios_datos);
        // Añadimos los difrentes inputs utilizados
        filtros_usuarios_datos.add_input('nombreInput', 'nombre', filtros_usuarios_datos.UPPER);
        filtros_usuarios_datos.add_input('curpInput', 'curp', filtros_usuarios_datos.UPPER);
        filtros_usuarios_datos.add_input('campoSelect', 'campo');
        filtros_usuarios_datos.add_input('estadoSelect', 'estado');
        // Precarga de los valores de los inputs mantenidos después de la carga de la página.
        filtros_usuarios_datos.precarga();
    </script>
{% endblock %}
