{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}SIGA Sala{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('SIGA Sala') %}
        {{ topbar.button_previous('Salas', url_for('siga_salas.list_active')) }}
        {% if current_user.can_admin('SIGA_SALAS') %}
            {{ topbar.button_edit('Editar', url_for('siga_salas.edit', siga_sala_id=siga_sala.id)) }}
        {% endif %}
        {% if current_user.can_admin('SIGA_SALAS') or (current_user.can_edit('SIGA_SALAS')) %}
            {% if siga_sala.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('siga_salas.delete', siga_sala_id=siga_sala.id)) }}{% endif %}
            {% if siga_sala.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('siga_salas.recover', siga_sala_id=siga_sala.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=siga_sala.estatus) %}
        {{ detail.label_value_big('Clave', siga_sala.clave) }}
        {{ detail.label_value('Edificio', siga_sala.domicilio.edificio) }}
        {{ detail.label_value('Dirección IP', siga_sala.direccion_ip) }}
        {{ detail.label_value('Dirección NVR', siga_sala.direccion_nvr) }}
        {{ detail.label_value('Estado', siga_sala.estado) }}
        {{ detail.label_value('Descripción', siga_sala.descripcion) }}
    {% endcall %}

    {% call detail.card(title='Bitacora') %}
        <!-- Formulario de filtros Salas -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="buscadorForm_salas" onsubmit="filtros_bitacoras.buscar(); return false;" autocomplete="off">
                    <div class="col-2">
                        <div class="form-floating">
                            <input id="desdeInput" type="date" class="form-control" aria-label="Desde" onchange="filtros_bitacoras.buscar(); return false;">
                            <label for="desdeInput">Desde</label>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-floating">
                            <input id="hastaInput" type="date" class="form-control" aria-label="Hasta" onchange="filtros_bitacoras.buscar(); return false;">
                            <label for="hastaInput">Hasta</label>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-floating">
                            <select class="form-select" id="accionSelect" name="accionSelect" aria-label="accion" onchange="filtros_bitacoras.buscar(); return false;" style="flex: inherit;">
                                <option selected value=""></option>
                                {% for accion in acciones_bitacoras %}
                                    <option value="{{accion}}">{{accion}}</option>
                                {% endfor %}
                            </select>
                            <label for="accionSelect">Acción</label>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-floating">
                            <select class="form-select" id="estadoSelect" name="estadoSelect" aria-label="Estado" onchange="filtros_bitacoras.buscar(); return false;" style="flex: inherit;">
                                <option selected value=""></option>
                                {% for estado in estados_bitacoras %}
                                    <option value="{{estado}}">{{estado}}</option>
                                {% endfor %}
                            </select>
                            <label for="estadoSelect">Estado</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtros_bitacoras.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtros_bitacoras.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Datatable Bitacora -->
        <table id="bitacoras_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Tiempo</th>
                    <th>Acción</th>
                    <th>Estado</th>
                    <th>Descripción</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_admin('SIGA_SALAS') or (current_user.can_edit('SIGA_SALAS')) %}
        {% if siga_sala.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar la sala ' + siga_sala.clave + '?') }}{% endif %}
        {% if siga_sala.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar la sala ' + siga_sala.clave + '?') }}{% endif %}
    {% endif %}
    {{ detail.moment_js(moment) }}

    <!-- Importación de la configuración para DataTables -->
    <script src="/static/js/datatables_config.js"></script>
    <script src="/static/js/datatables_filtros.js"></script>
    <script>
        const dataTable_funcs_bitacoras = new ConfigDataTable( "{{ csrf_token() }}" );
        let configDataTable_bitacoras = dataTable_funcs_bitacoras.config;
        configDataTable_bitacoras['ajax']['url'] = '/siga_bitacoras/datatable_json';
        configDataTable_bitacoras['ajax']['data'] = {{ filtros }};
        configDataTable_bitacoras['columns'] = [
            { data: 'tiempo' },
            { data: 'accion' },
            { data: 'estado' },
            { data: 'descripcion' }
        ];
        configDataTable_bitacoras['columnDefs'] = [
            {
                targets: 2, // estado
                data: null,
                render: function(data, type, row, meta) {
                    let bgcolor = "bg-dark";
                    switch (data)    {
                        case "CORRECTO":        bgcolor = 'bg-success';             break;
                        case "PENDIENTE":       bgcolor = "bg-warning text-dark";   break;
                        case "CANCELADO":       bgcolor = 'bg-secondary';           break;
                        case "ERROR":           bgcolor = 'bg-danger';              break;
                    }
                    return '<span class="badge rounded-pill ' + bgcolor + '">' + data + '</span>';
                }
            },
            {
                targets: 3, // descripcion
                data: null,
                render: function(data, type, row, meta) {
                    return dataTable_funcs_bitacoras.texto_cortado(data);
                }
            }
        ];

        // Declaración de los Filtros utilizados
        // Creación del Objeto manejador de Filtros
        const filtros_bitacoras = new Filtros('#bitacoras_datatable', configDataTable_bitacoras);
        // Añadimos los difrentes inputs utilizados
        filtros_bitacoras.add_input('desdeInput', 'desde');
        filtros_bitacoras.add_input('hastaInput', 'hasta');
        filtros_bitacoras.add_input('accionSelect', 'accion');
        filtros_bitacoras.add_input('estadoSelect', 'estado');
        // Precarga de los valores de los inputs mantenidos después de la carga de la página.
        filtros_bitacoras.precarga();
    </script>
{% endblock %}
