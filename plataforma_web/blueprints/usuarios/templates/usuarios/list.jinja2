{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Usuarios{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {% if current_user.can_view('MODULOS') %}
            {{ topbar.button('Módulos', url_for('modulos.list_active'), 'mdi:toy-brick') }}
        {% endif %}
        {% if current_user.can_view('ROLES') %}
            {{ topbar.button('Roles', url_for('roles.list_active'), 'mdi:gamepad') }}
        {% endif %}
        {% if current_user.can_edit('USUARIOS') %}
            {% if estatus == 'A' %}{{ topbar.button_list_inactive('Inactivos', url_for('usuarios.list_inactive')) }}{% endif %}
            {% if estatus == 'B' %}{{ topbar.button_list_active('Activos', url_for('usuarios.list_active')) }}{% endif %}
        {% endif %}
        {% if current_user.can_insert('USUARIOS') %}
            {{ topbar.button_new('Nuevo Usuario', url_for('usuarios.new')) }}
        {% endif %}
        {# topbar.button_search('Buscar', url_for('usuarios.search')) #}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
    <!-- Formulario de filtros de usuarios -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="buscadorForm" onsubmit="filtros_usuarios.buscar(); return false;">
                    <div class="col-5">
                        <div class="form-floating">
                            <input id="emailInput" type="text" class="form-control" aria-label="email" onchange="filtros_usuarios.buscar(); return false;" style="text-transform: lowercase;">
                            <label for="emailInput">email</label>
                        </div>
                    </div>
                    <div class="col-5">
                        <div class="form-floating">
                            <input id="nombre_completoInput" type="text" class="form-control" aria-label="email" onchange="filtros_usuarios.buscar(); return false;" style="text-transform: uppercase;">
                            <label for="nombre_completoInput">Nombre Completo</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtros_usuarios.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtros_usuarios.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Datatable de Usuarios -->
        <table id="usuarios_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>e-mail</th>
                    <th>Nombres Completos</th>
                    <th>Puesto</th>
                    <th>Autoridad</th>
                    <th>Oficina</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <!-- Importación de la configuración para DataTables -->
    <script src="/static/js/datatables_config.js"></script>
    <!-- Importación de los fitlros para dataTable -->
    <script src="/static/js/datatables_filtros.js"></script>
    <!-- Configuración del DataTable -->
    <script>
        const dataTable_funcs = new ConfigDataTable( "{{ csrf_token() }}" );
        let configDataTable = dataTable_funcs.config;
        configDataTable['ajax']['url'] = '/usuarios/datatable_json';
        configDataTable['ajax']['data'] = {{ filtros }};
        configDataTable['columns'] = [
            { data: "detalle" },
            { data: "nombre" },
            { data: "puesto" },
            { data: "autoridad" },
            { data: "oficina" }
        ];
        configDataTable['columnDefs'] = [
            {
                targets: 0, // detalle
                data: null,
                render: function(data, type, row, meta) {
                    return dataTable_funcs.texto_con_url(data.email, data.url);
                }
            },
            {
                targets: [1, 2], // nombre, puesto
                data: null,
                render: function(data, type, row, meta) {
                    return dataTable_funcs.texto_cortado(data, 32);
                }
            },
            {
                targets: [3, 4], // autoridad, oficina
                data: null,
                render: function(data, type, row, meta) {
                    return dataTable_funcs.texto_con_url(data.clave, data.url);
                }
            }
        ];
        // Declaración de los Filtros utilizados
        // Creación del Objeto manejador de Filtros
        const filtros_usuarios = new Filtros('#usuarios_datatable', configDataTable);
        // Añadimos los difrentes inputs utilizados
        filtros_usuarios.add_input('emailInput', 'email', filtros_usuarios.LOWER);
        filtros_usuarios.add_input('nombre_completoInput', 'nombre_completo', filtros_usuarios.UPPER);
        // Precarga de los valores de los inputs mantenidos después de la carga de la página.
        filtros_usuarios.precarga();
    </script>
{% endblock %}
