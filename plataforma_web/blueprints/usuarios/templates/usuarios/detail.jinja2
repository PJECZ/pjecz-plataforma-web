{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}
{% import 'macros/list.jinja2' as list %}

{% block title %}Usuario{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Usuario ' + usuario.email) %}
        {{ topbar.button_previous('Usuarios', url_for('usuarios.list_active')) }}
        {% if current_user.can_admin('USUARIOS') %}
            {{ topbar.button_edit('Editar', url_for('usuarios.edit_admin', usuario_id=usuario.id)) }}
            {% if usuario.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('usuarios.delete', usuario_id=usuario.id)) }}{% endif %}
            {% if usuario.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('usuarios.recover', usuario_id=usuario.id)) }}{% endif %}
        {% elif current_user.can_edit('USUARIOS') %}
            {{ topbar.button_edit('Editar', url_for('usuarios.edit', usuario_id=usuario.id)) }}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=usuario.estatus) %}
        {{ detail.label_value_big('Nombre', usuario.nombre) }}
        {{ detail.label_value('Puesto', usuario.puesto) }}
        {{ detail.label_value('CURP', usuario.curp) }}
        {{ detail.label_value('e-mail', usuario.email) }}
        {% if current_user.can_view("DISTRITOS") %}
            {{ detail.label_value('Distrito', usuario.autoridad.distrito.nombre, url_for('distritos.detail', distrito_id=usuario.autoridad.distrito_id)) }}
        {% else %}
            {{ detail.label_value('Distrito', usuario.autoridad.distrito.nombre) }}
        {% endif %}
        {% if current_user.can_view("AUTORIDADES") %}
            {{ detail.label_value('Autoridad', usuario.autoridad.descripcion, url_for('autoridades.detail', autoridad_id=usuario.autoridad_id)) }}
        {% else %}
            {{ detail.label_value('Autoridad', usuario.autoridad.descripcion) }}
        {% endif %}
        {% if current_user.can_view("OFICINAS") %}
            {{ detail.label_value('Oficina', usuario.oficina.descripcion, url_for('oficinas.detail', oficina_id=usuario.oficina_id)) }}
        {% else %}
            {{ detail.label_value('Oficina', usuario.oficina.descripcion) }}
        {% endif %}
        {{ detail.label_value('Teléfono celular', usuario.telefono_celular) }}
        {{ detail.label_value('Workspace', usuario.workspace) }}
        {{ detail.label_value('Creado', moment(usuario.creado).format('llll')) }}
    {% endcall %}
    {% if current_user.can_view('ROLES') %}
        {% call detail.card("Roles") %}
            <table id="roles_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Rol</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                {% for usuario_rol in usuario.usuarios_roles %}
                    {% if usuario_rol.estatus == "A" %}
                    <tr>
                        <td><a href="{{ url_for('roles.detail', rol_id=usuario_rol.rol_id) }}">{{ usuario_rol.rol.nombre }}</a></td>
                        <td>
                        {% if current_user.can_edit('USUARIOS ROLES') %}
                            {{ modals.button_delete(url=url_for('usuarios_roles.delete', usuario_rol_id=usuario_rol.id), id='DeleteRolUsuario', message='¿Eliminar ' + usuario_rol.rol.nombre + '?') }}
                        {% endif %}
                        </td>
                    </tr>
                    {% endif %}
                {% endfor %}
                </tbody>
            </table>
            {% if current_user.can_insert('USUARIOS ROLES') %}
                <a href="{{ url_for('usuarios_roles.new_with_usuario', usuario_id=usuario.id) }}" class="btn btn-primary">Agregar</a>
            {% endif %}
        {% endcall %}
    {% endif %}
    {% if current_user.can_view('SOPORTES TICKETS') %}
        {% call list.card('Tickets') %}
            <table id="soportes_tickets_datatable" class="table display nowrap" style="width:100%;">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Creación</th>
                        <th>Categoría</th>
                        <th>Oficina</th>
                        <th>Estado</th>
                        <th>Técnico</th>
                        <th>Descripción</th>
                        <th>Solución/Cancelación</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
    {% call list.card() %}
        <table id="inv_equipos_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Numero Inventario</th>
                    <th>Numero Serie</th>
                    <th>Adquisicion Fecha</th>
                    {# <th>Custodia</th>#}
                    <th>Modelo</th>
                </tr>
            </thead>
            
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_edit('USUARIOS') %}
        {% if usuario.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + usuario.nombre + '?') }}{% endif %}
        {% if usuario.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + usuario.nombre + '?') }}{% endif %}
    {% endif %}
    {{ detail.moment_js(moment) }}
    {{ detail.datatable('roles_datatable') }}
    {{ modals.custom_javascript('Eliminar', '¿Eliminar ese rol del usuario?', 'DeleteRolUsuario') }}
    <script>
        $('#soportes_tickets_datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: true,
            searching: false,
            responsive: true,
            scrollX: true,
            deferRender: true,
            order: [[ 0, "desc" ]],
            ajax: {
                url: "/soportes_tickets/datatable_json",
                type: "POST",
                headers: {'X-CSRF-TOKEN': "{{ csrf_token() }}"},
                dataType: "json",
                dataSrc: "data",
                data: { "estatus": "A", "usuario_id": {{usuario.id}} }
            },
            columns: [
                { data: "id" },
                { data: "creacion" },
                { data: "categoria" },
                { data: "oficina" },
                { data: "estado" },
                { data: "tecnico" },
                { data: "descripcion" },
                { data: "soluciones" }
            ],
            columnDefs: [
                {
                    targets: 0, // ID
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1, // Creación
                    type: "date",
                    render: function(data, type, row, meta) {
                        return moment.utc(data).local().format("YYYY-MM-DD HH:mm a");
                    }
                },
                {
                    targets: [2, 5], // Categoría, Técnico
                    data: null,
                    render: function(data, type, row, meta) {
                        if(data.nombre.length > 24)
                            texto = '<span title="' + data.nombre + '">' + data.nombre.substr(0, 24) + '…' + '</span>';
                        else
                            texto = data.nombre;
                        if(data.url == '')
                            return texto;
                        else
                            return '<a href="' + data.url + '">' + texto + '</a>';
                    }
                },
                {
                    targets: 3, // Oficina
                    data: null,
                    render: function(data, type, row, meta) {
                        texto = '<span title="' + data.nombre + '">' + data.clave + '</span>';
                        if(data.url == '')
                            return texto;
                        else
                            return '<a href="' + data.url + '">' + texto + '</a>';
                    }
                },
                {
                    targets: [6, 7],    // Descripción, Soluciones
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data != null)
                            if (data.length > 24)   {
                                return '<span title="' + data + '">' + data.substr(0, 24) + '…' + '</span>';
                            } else {
                                return data;
                            }
                        return '—';
                    }
                }
            ],
            rowCallback: function( row, data ){
                switch (data.estado)    {
                    case "ABIERTO":     $(row).css("background-color", "#fef9e7");  break;
                    case "TRABAJANDO":  $(row).css("background-color", "#ebf5fb");  break;
                    case "CANCELADO":   $(row).css("background-color", "#fdedec");  break;
                    case "NO RESUELTO": $(row).css("background-color", "#f5eef8");  break;
                    case "CERRADO":     $(row).css("background-color", "#eafaf1");  break;
                }
            },
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        });
        </script>
    {# equipos#}
    <script>
        $('#inv_equipos_datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            searching: false,
            responsive: true,
            scrollX: true,
            ajax: {
                url: "/inv_equipos/datatable_json",
                type: "POST",
                headers: {'X-CSRF-TOKEN': "{{ csrf_token() }}"},
                dataType: "json",
                dataSrc: "data",
                data: {{ filtros }} 
            },
            columns: [
                { data: "numero_inventario" },
                { data: "numero_serie" },
                { data: "adquisicion_fecha" },
                /*{ data: "custodia" },*/
                { data: "modelo" }
            ],
            columnDefs: [
                {
                    targets: 0,
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.descripcion + '</a>';
                    }
                },
                /*{
                    targets: 3,
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.nombre_completo + '</a>';
                    }
                },
                {
                    targets: 4,
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.descripcion + '</a>';
                    }
                },*/
            ],
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        });
    </script>

{% endblock %}
    