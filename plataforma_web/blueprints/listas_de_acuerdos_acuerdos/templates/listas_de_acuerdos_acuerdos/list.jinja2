{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Acuerdos{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {% if current_user.can_edit('LISTAS DE ACUERDOS ACUERDOS') %}
            {% if estatus == 'A' %}{{ topbar.button_list_inactive('Inactivos', url_for('listas_de_acuerdos_acuerdos.list_inactive')) }}{% endif %}
            {% if estatus == 'B' %}{{ topbar.button_list_active('Activos', url_for('listas_de_acuerdos_acuerdos.list_active')) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
        <table id="listas_de_acuerdos_acuerdos_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Creados</th>
                    <th>Autoridades</th>
                    <th>Referencias</th>
                    <th>Folios</th>
                    <th>Expedientes</th>
                    <th>Actores</th>
                    <th>Demandados</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <script>
        $('#listas_de_acuerdos_acuerdos_datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            searching: false,
            responsive: true,
            scrollX: true,
            ajax: {
                url: "/listas_de_acuerdos/acuerdos/datatable_json",
                type: "POST",
                headers: {'X-CSRF-TOKEN': "{{ csrf_token() }}"},
                dataType: "json",
                dataSrc: "data",
                data: {{ filtros }}
            },
            columns: [
                { data: "creado" },
                { data: "autoridad" },
                { data: "detalle" },
                { data: "folio" },
                { data: "expediente" },
                { data: "actor" },
                { data: "demandado" }
            ],
            columnDefs: [
                {
                    targets: 0,
                    type: "date",
                    render: function (data, type, row) {
                        return moment.utc(data).local().format("YYYY-MM-DD HH:mm:ss");
                    }
                },
                {
                    targets: 2,
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' +
                            (data.descripcion.length > 40 ? data.descripcion.substr(0, 20) + '…' : data.descripcion) +
                            '</a>';
                    }
                },
                {
                    targets: [5, 6],
                    data: null,
                    render: function(data, type, row, meta) {
                        return data.length > 20 ? data.substr(0, 20) + '…' : data;
                    }
                }
            ],
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        });
    </script>
{% endblock %}
