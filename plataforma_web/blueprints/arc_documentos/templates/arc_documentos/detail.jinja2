{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Expediente{% endblock %}

{% block custom_head %}
    <!-- Select2 bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>
    .select2-container .select2-selection--single {
        height: 58px;
        border: 1px solid #ced4da;
    }
    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 64px;
        font-size: 1rem;
        margin-left: -10px;
    }
    .select2-selection--single {
        display: block;
        width: 100%;
        padding: .375rem 2.25rem .375rem .75rem;
        color: #212529;
        background-color: #fff;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right .75rem center;
        background-size: 16px 12px;
    }
    .select2-selection__arrow   {
        visibility: hidden;
    }
    </style>
    <style>
    .bg-pink {
        color: white;
        background-color: var(--bs-pink); /*#d63384;*/
    }
    .bg-purple {
        color: white;
        background-color: var(--bs-purple); /*#6f42c1;*/
    }
    .bg-brown {
        color: white;
        background-color: #653208;
    }
    </style>
{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Expediente - ' + documento.id | string ) %}
        {{ topbar.button_previous('Archivo', url_for('arc_archivos.list_active')) }}
        {{ topbar.button_previous('Expedientes', url_for('arc_documentos.list_active')) }}
        {% if current_user.can_edit('ARC DOCUMENTOS') %}
            {{ topbar.button_edit('Editar', url_for('arc_documentos.edit', arc_documento_id=documento.id)) }}
            {# {% if autoridad.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('autoridades.delete', autoridad_id=autoridad.id)) }}{% endif %}
            {% if autoridad.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('autoridades.recover', autoridad_id=autoridad.id)) }}{% endif %} #}
        {% endif %}
        {% if current_user.can_insert('ARC DOCUMENTOS SOLICITUDES') and documento.ubicacion == 'ARCHIVO' %}
            {{ topbar.button_new('Solicitar', url_for('arc_documentos_solicitudes.new', documento_id=documento.id)) }}
        {% endif %}
        {% if current_user.can_insert('ARC DOCUMENTOS SOLICITUDES') and documento.ubicacion == 'JUZGADO' %}
            {{ topbar.button_new('Añadir a Remesa', url_for('arc_remesas.add_document', documento_id=documento.id)) }}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {# Detalle #}
    {% call detail.card(estatus=documento.estatus) %}
        {{ detail.label_value('Núm. Expediente', documento.expediente) }}
        {{ detail.label_value('Año', documento.anio) }}
        {{ detail.label_value('Juzgado', documento.autoridad.clave + ' : ' + documento.autoridad.descripcion_corta, url_for('autoridades.detail', autoridad_id=documento.autoridad.id)) }}
        <hr>
        {{ detail.label_value('Actor', documento.actor) }}
        {{ detail.label_value('Demandado', documento.demandado) }}
        <hr>
        {{ detail.label_value('Juzgado Origen', documento.juzgado_origen) }}
        {{ detail.label_value('Juicio', documento.juicio) }}
        {{ detail.label_value('Tipo', documento.tipo) }}
        {{ detail.label_value('Tipo de Juzgado', documento.tipo_juzgado) }}
        <hr>
        {{ detail.label_value('Fojas', documento.fojas) }}
        <div class="row">
            <div class="col-md-3 text-end">Ubicación</div>
            <div class="col-md-9">
                {% if documento.ubicacion == "JUZGADO" %}
                    <span class="badge rounded-pill bg-info text-dark">{{ documento.ubicacion }} <span class="iconify" data-icon="mdi:gavel"></span></span>
                {% elif documento.ubicacion == "NO DEFINIDO" %}
                    <span class="badge rounded-pill bg-danger">{{ documento.ubicacion }} <span class="iconify" data-icon="mdi:close-octagon"></span></span>
                {% elif documento.ubicacion == "ARCHIVO" %}
                    <span class="badge rounded-pill bg-secondary">{{ documento.ubicacion }} <span class="iconify" data-icon="mdi:archive"></span></span>
                {% elif documento.ubicacion == "REMESA" %}
                    <span class="badge rounded-pill bg-warning text-dark">{{ documento.ubicacion }} <span class="iconify" data-icon="mdi:truck"></span></span>
                {% else %}
                    <strong>{{ documento.ubicacion }}</strong>
                {% endif %}
            </div>
        </div>
    {% endcall %}
    {# Bitacora #}
    {% call detail.card('Bitacora') %}
        <!-- Formulario de filtros -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="buscadorForm" onsubmit="buscar(); return false;">
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="fechaDesdeInput" type="date" class="form-control" aria-label="desde" aria-describedby="button-buscar" onchange="buscar(); return false;">
                            <label for="fechaDesdeInput">Fecha Desde</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="fechaHastaInput" type="date" class="form-control" aria-label="hasta" aria-describedby="button-buscar" onchange="buscar(); return false;">
                            <label for="fechaHastaInput">Fecha Hasta</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <select class="form-select" id="accionSelect" name="accionSelect" aria-label="Todas" onchange="buscar(); return false;" style="flex: inherit;">
                                <option selected value="">TODAS</option>
                                {% for accion in acciones %}
                                    <option value="{{accion}}">{{accion}}</option>
                                {% endfor %}
                            </select>
                            <label for="accionSelect">Acción</label>
                        </div>
                    </div>
                    <div class="col-10">
                        <div class="form-floating">
                            <select id="usuarioSelect" class="form-select" onchange="buscar(); return false;"></select>
                            <label for="usuarioSelect">Usuario</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Datatable -->
        <table id="documentos_bitacora_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Fecha y Hora</th>
                    <th>Usuario</th>
                    <th>Fojas</th>
                    <th>Observaciones</th>
                    <th>Acción</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
    {# Historial de Solicitudes #}
    {% call detail.card('Historial de Solicitudes') %}
    <!-- Datatable -->
        <table id="solicitudes_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Tiempo</th>
                    <th>Juzgado</th>
                    <th>Estado</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
    {# Historial de Remesas #}
    {% call detail.card('Historial de Remesas') %}
    <!-- Datatable -->
        <table id="remesas_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Tiempo</th>
                    <th>Juzgado</th>
                    <th>Estado</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    {{ detail.moment_js(moment) }}
    {% if current_user.can_edit('ARC DOCUMENTOS') %}
        {% if documento.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar?') }}{% endif %}
        {% if documento.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar?') }}{% endif %}
    {% endif %}
    {{ detail.config_datatable() }}
    <script>
        configDataTable['ajax']['url'] = '/arc_documentos_bitacoras/datatable_json';
        configDataTable['ajax']['data'] = { 'estatus': "A", 'arc_documento_id': {{ documento.id }} };
        configDataTable['columns'] = [
            { data: "modificado" },
            { data: "usuario" },
            { data: "fojas" },
            { data: "observaciones" },
            { data: "accion" }
        ];
        configDataTable['columnDefs'] = [
            {
                targets: 0, // modificado
                type: "date",
                render: function (data, type, row) {
                    return moment.utc(data).local().format("YYYY-MM-DD HH:mm:ss");
                }
            },
            {
                targets: 1, // usuario
                data: null,
                render: function(data, type, row, meta) {
                    if (data.nombre.length > 16)
                        nombre = data.nombre.substr(0, 16) + '…';
                    else
                        nombre = data.nombre;
                    return '<a href="' + data.url + '"><span title="' + data.nombre + '">' + nombre + '</span></a>';
                }
            },
            {
                targets: 3, // observaciones
                data: null,
                render: function(data, type, row, meta) {
                    if (data.length > 16)
                        texto = '<span title="' + data + '">' + data.substr(0, 16) + '…' + '</span>';
                    else
                        texto = data;
                    return texto;
                }
            },
            {
                targets: 4, // accion
                data: null,
                render: function(data, type, row, meta) {

                    switch (data)    {
                        case "ALTA":        return '<span class="badge rounded-pill bg-info">ALTA</span>';   break;
                        case "EDICION DOC": return '<span class="badge rounded-pill bg-warning text-dark">EDICION DOC</span>';   break;
                        case "CORRECCION FOJAS":  return '<span class="badge rounded-pill bg-warning text-dark">CORRECCION FOJAS</span>';   break;
                        case "NO ENCONTRADO":     return '<span class="badge rounded-pill bg-danger">NO ENCONTRADO</span>';   break;
                        case "ENVIADO":         return '<span class="badge rounded-pill bg-pink">ENVIADO</span>';   break;
                        case "ENTREGADO":       return '<span class="badge rounded-pill bg-success">ENTREGADO</span>';   break;
                        case "ARCHIVAR":        return '<span class="badge rounded-pill bg-secondary">ARCHIVAR</span>';   break;
                    }
                    return data;
                }
            }
        ];

        // Búsqueda
        let fechaDesde = document.getElementById('fechaDesdeInput').value
        let fechaHasta = document.getElementById('fechaHastaInput').value
        let accion = document.getElementById('accionSelect').value;
        let usuario = document.getElementById('usuarioSelect').value.toUpperCase();

        if(fechaDesde != '')
            configDataTable['ajax']['data']['fecha_desde'] = fechaDesde;
        if(fechaHasta != '')
            configDataTable['ajax']['data']['fecha_hasta'] = fechaHasta;
        if(accion != '')
            configDataTable['ajax']['data']['accion'] = accion;
        if(usuario != '')
            configDataTable['ajax']['data']['usuario_id'] = usuario;
        
        // Datatable
        $('#documentos_bitacora_datatable').DataTable(configDataTable);
    </script>
    <!-- Función de buscador -->
    <script type="text/javascript">
        function buscar() {
            let fechaDesde = document.getElementById('fechaDesdeInput').value
            let fechaHasta = document.getElementById('fechaHastaInput').value
            let accion = document.getElementById('accionSelect').value;
            let usuario = document.getElementById('usuarioSelect').value.toUpperCase();

            if( configDataTable['ajax']['data']['fecha_desde'] === undefined && fechaDesde === '' &&
                configDataTable['ajax']['data']['fecha_hasta'] === undefined && fechaHasta === '' &&
                configDataTable['ajax']['data']['accion'] === undefined && accion === '' &&
                configDataTable['ajax']['data']['usuario_id'] === undefined && usuario === ''
            ) return false;

            $('#documentos_bitacora_datatable').DataTable().destroy();

            if(fechaDesde == '')
                delete configDataTable['ajax']['data']['fecha_desde'];
            else
                configDataTable['ajax']['data']['fecha_desde'] = fechaDesde;
            if(fechaHasta == '')
                delete configDataTable['ajax']['data']['fecha_hasta'];
            else
                configDataTable['ajax']['data']['fecha_hasta'] = fechaHasta;
            if(accion == '')
                delete configDataTable['ajax']['data']['accion'];
            else
                configDataTable['ajax']['data']['accion'] = accion;
            if(usuario == '')
                delete configDataTable['ajax']['data']['usuario_id'];
            else
                configDataTable['ajax']['data']['usuario_id'] = usuario;

            $('#documentos_bitacora_datatable').DataTable(configDataTable);
        };

        function limpiar()  {
            if( configDataTable['ajax']['data']['fecha_desde'] === undefined &&
                configDataTable['ajax']['data']['fecha_hasta'] === undefined &&
                configDataTable['ajax']['data']['accion'] === undefined &&
                configDataTable['ajax']['data']['usuario_id'] === undefined
            ) return false;

            delete configDataTable['ajax']['data']['fecha_desde'];
            delete configDataTable['ajax']['data']['fecha_hasta'];
            delete configDataTable['ajax']['data']['accion'];
            delete configDataTable['ajax']['data']['usuario_id'];

            document.getElementById('usuarioSelect').textContent = '';
            document.getElementById('usuarioSelect').options[0] = null;

            $('#documentos_bitacora_datatable').DataTable().destroy();
            $('#documentos_bitacora_datatable').DataTable(configDataTable);
        };
    </script>
    <!-- Select2 bootstrap -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function(){
            $('#usuarioSelect').addClass('js-data-example-ajax form-control');
            $('#usuarioSelect').select2({
                // --- Carga de juzgados por Ajax --- //
                ajax: {
                    url: '/usuarios/list_usuarios_json/',
                    headers: { "X-CSRF-TOKEN": "{{ csrf_token() }}" },
                    dataType: 'json',
                    delay: 250,
                    type: "POST",
                    data: function (params) {
                        return { 'searchString': params.term.toUpperCase() };
                    }
                },
                minimumInputLength: 3
            });
        });
    </script>
    <!-- DataTable para Historial de Solicitudes -->
    <script>
    let configDataTable_2 = {
            processing: true,
            serverSide: true,
            ordering: false,
            searching: false,
            responsive: true,
            scrollX: true,
            ajax: {
                url: null,
                type: "POST",
                headers: { "X-CSRF-TOKEN": "{{ csrf_token() }}" },
                dataType: "json",
                dataSrc: "data",
                data: null
            },
            columns: null,
            columnDefs: null,
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        };
        // ---
        configDataTable_2['ajax']['url'] = '/arc_documentos_solicitudes/datatable_json';
        configDataTable_2['ajax']['data'] = { 'estatus': "A", 'arc_documento_id': {{ documento.id }}, 'orden_acendente': true };
        configDataTable_2['columns'] = [
            { data: 'solicitud' },
            { data: 'tiempo' },
            { data: 'juzgado' },
            { data: 'estado' }
        ];
        configDataTable_2['columnDefs'] = [
            {
                targets: 0, // solicitud
                type: "date",
                render: function (data, type, row) {
                    return '<a href="' + data.url + '">' + data.id + '</a>';
                }
            },{
                targets: 1, // tiempo
                type: "date",
                render: function (data, type, row) {
                    return moment.utc(data).local().format("YYYY-MM-DD HH:mm:ss");
                }
            },
            {
                targets: 2, // juzgado
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '"><span title="' + data.nombre + '">' + data.clave + '</span></a>';
                }
            },
            {
                targets: 3, // estado
                data: null,
                render: function(data, type, row, meta) {
                    switch (data)    {
                        case "SOLICITADO":      return '<span class="badge rounded-pill bg-warning text-dark">SOLICITADO</span>';   break;
                        case "CANCELADO":       return '<span class="badge rounded-pill bg-secondary">CANCELADO</span>';   break;
                        case "ASIGNADO":        return '<span class="badge rounded-pill bg-primary">ASIGNADO</span>';   break;
                        case "ENCONTRADO":      return '<span class="badge rounded-pill bg-purple">ENCONTRADO</span>';   break;
                        case "NO ENCONTRADO":   return '<span class="badge rounded-pill bg-danger">NO ENCONTRADO</span>';   break;
                        case "ENVIANDO":        return '<span class="badge rounded-pill bg-pink">ENVIANDO</span>';   break;
                        case "ENTREGADO":       return '<span class="badge rounded-pill bg-success">ENTREGADO</span>';   break;
                    }
                    return data;
                }
            }
        ];
        
        // Datatable
        $('#solicitudes_datatable').DataTable(configDataTable_2);
    </script>
    <!-- DataTable para Historial de Remesas -->
    <script>
    let configDataTable_3 = {
            processing: true,
            serverSide: true,
            ordering: false,
            searching: false,
            responsive: true,
            scrollX: true,
            ajax: {
                url: null,
                type: "POST",
                headers: { "X-CSRF-TOKEN": "{{ csrf_token() }}" },
                dataType: "json",
                dataSrc: "data",
                data: null
            },
            columns: null,
            columnDefs: null,
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        };
        // ---
        configDataTable_3['ajax']['url'] = '/arc_remesas/datatable_json';
        configDataTable_3['ajax']['data'] = { 'estatus': "A", 'documento_id': {{ documento.id }}, 'orden_acendente': true };
        configDataTable_3['columns'] = [
            { data: 'remesa' },
            { data: 'tiempo' },
            { data: 'juzgado' },
            { data: 'estado' }
        ];
        configDataTable_3['columnDefs'] = [
            {
                targets: 0, // remesa
                type: "date",
                render: function (data, type, row) {
                    return '<a href="' + data.url + '">' + data.id + '</a>';
                }
            },{
                targets: 1, // tiempo
                type: "date",
                render: function (data, type, row) {
                    return moment.utc(data).local().format("YYYY-MM-DD HH:mm:ss");
                }
            },
            {
                targets: 2, // juzgado
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '"><span title="' + data.nombre + '">' + data.clave + '</span></a>';
                }
            },
            {
                targets: 3, // estado
                data: null,
                render: function(data, type, row, meta) {
                    switch (data)    {
                        case "PENDIENTE":       return '<span class="badge rounded-pill bg-warning text-dark">PENDIENTE</span>';   break;
                        case "CANCELADO":       return '<span class="badge rounded-pill bg-secondary">CANCELADO</span>';   break;
                        case "ENVIADO":         return '<span class="badge rounded-pill bg-pink">ENVIANDO</span>';   break;
                        case "ASIGNADO":        return '<span class="badge rounded-pill bg-primary">PROCESANDO</span>';   break;
                        case "RECHAZADO":       return '<span class="badge rounded-pill bg-danger">RECHAZADO</span>';   break;
                        case "ENCONTRADO":      return '<span class="badge rounded-pill bg-purple">ENCONTRADO</span>';   break;
                        case "ARCHIVADO":       return '<span class="badge rounded-pill bg-success">ARCHIVADO</span>';   break;
                    }
                    return data;
                }
            }
        ];
        
        // Datatable
        $('#remesas_datatable').DataTable(configDataTable_3);
    </script>
{% endblock %}
