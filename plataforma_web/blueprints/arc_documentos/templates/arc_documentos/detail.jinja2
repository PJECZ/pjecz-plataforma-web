{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}
{% import 'macros/quill.jinja2' as quill %}

{% block title %}Expediente{% endblock %}

{% block custom_head %}
    <!-- CSS para estilo Boton ayuda -->
    {{ quill.head() }}
    <!-- font awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Select2 bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://storage.googleapis.com/pjecz-informatica/static/css/select2.css" rel="stylesheet" />
{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Expediente - ' + documento.id | string ) %}
        {{ topbar.button_previous('Archivo', url_for('arc_archivos.list_active')) }}
        {{ topbar.button_previous('Expedientes', url_for('arc_documentos.list_active')) }}
        {% if mostrar_secciones['boton_editar'] %}
            {{ topbar.button_edit('Editar', url_for('arc_documentos.edit', arc_documento_id=documento.id)) }}
        {% endif %}
        {% if mostrar_secciones['boton_solicitar'] %}
            {{ topbar.button_new('Solicitar', url_for('arc_solicitudes.new', documento_id=documento.id)) }}
        {% endif %}
        {% if current_user.can_insert('ARC SOLICITUDES') and documento.ubicacion == 'JUZGADO' %}
            {{ topbar.button_new('Añadir a Remesa', url_for('arc_remesas.add_document', documento_id=documento.id)) }}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {# Detalle #}
    {% call detail.card(estatus=documento.estatus) %}
        {{ detail.label_value('Núm. Expediente', documento.expediente) }}
        {{ detail.label_value('Año', documento.anio) }}
        {{ detail.label_value('Instancia', documento.autoridad.clave + ' : ' + documento.autoridad.descripcion_corta) }}
        <hr>
        {{ detail.label_value('Actor', documento.actor) }}
        {{ detail.label_value('Demandado', documento.demandado) }}
        <hr>
        {{ detail.label_value('Instancia de Origen', documento.arc_juzgado_origen.nombre) }}
        {{ detail.label_value('Juicio', documento.juicio) }}
        {{ detail.label_value('Tipo', documento.arc_documento_tipo.nombre) }}
        {{ detail.label_value('Tipo de Instancia', documento.tipo_juzgado) }}
        <hr>
        {{ detail.label_value('Fojas', documento.fojas) }}
        <div class="row">
            <div class="col-md-3 text-end">Ubicación</div>
            <div class="col-md-9">
                {% if documento.ubicacion == "JUZGADO" %}
                    <span class="badge rounded-pill bg-info text-dark">{{ documento.ubicacion }} <span class="iconify" data-icon="mdi:gavel"></span></span>
                {% elif documento.ubicacion == "NO DEFINIDO" %}
                    <span class="badge rounded-pill bg-danger">{{ documento.ubicacion }} <span class="iconify" data-icon="mdi:close-octagon"></span></span>
                {% elif documento.ubicacion == "ARCHIVO" %}
                    <span class="badge rounded-pill bg-secondary">{{ documento.ubicacion }} <span class="iconify" data-icon="mdi:archive"></span></span>
                {% elif documento.ubicacion == "REMESA" %}
                    <span class="badge rounded-pill bg-warning text-dark">{{ documento.ubicacion }} <span class="iconify" data-icon="mdi:truck"></span></span>
                {% else %}
                    <strong>{{ documento.ubicacion }}</strong>
                {% endif %}
            </div>
        </div>
    {% endcall %}
    {% if documento.notas %}
        <div class="card mb-3">
            <div class="card-header bg-warning text-dark" style="font-weight: bold;">Notas</div>
            <div class="card-body" style="background-color: #fff3cd;">
                <div class="col-md-9 text-start">{{ documento.notas }}</div>
            </div>
        </div>
    {% endif %}
    {# Bitacora #}
    {% call detail.card('Bitacora') %}
        <!-- Formulario de filtros -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="buscadorForm" onsubmit="filtros_bitacoras.buscar(); return false;">
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="fechaDesdeInput" type="date" class="form-control" aria-label="desde" aria-describedby="button-buscar" onchange="filtros_bitacoras.buscar(); return false;">
                            <label for="fechaDesdeInput">Fecha Desde</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="fechaHastaInput" type="date" class="form-control" aria-label="hasta" aria-describedby="button-buscar" onchange="filtros_bitacoras.buscar(); return false;">
                            <label for="fechaHastaInput">Fecha Hasta</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <select class="form-select" id="accionSelect" name="accionSelect" aria-label="Todas" onchange="filtros_bitacoras.buscar(); return false;" style="flex: inherit;">
                                <option selected value="">TODAS</option>
                                {% for accion in acciones %}
                                    <option value="{{accion}}">{{accion}}</option>
                                {% endfor %}
                            </select>
                            <label for="accionSelect">Acción</label>
                        </div>
                    </div>
                    <div class="col-10">
                        <div class="form-floating">
                            <select id="usuarioSelect" class="form-control js-select2-filter" onchange="filtros_bitacoras.buscar(); return false;"></select>
                            <label for="usuarioSelect">Usuario</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtros_bitacoras.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtros_bitacoras.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Datatable -->
        <table id="documentos_bitacora_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Fecha y Hora</th>
                    <th>Usuario</th>
                    <th>Fojas</th>
                    <th>Observaciones</th>
                    <th>Acción</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
    {# Historial de Solicitudes #}
    {% call detail.card('Historial de Solicitudes') %}
    <!-- Datatable -->
        <table id="arc_solicitudes_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Tiempo</th>
                    <th>Juzgado</th>
                    <th>Estado</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
    {# Historial de Remesas #}
    {% call detail.card('Historial de Remesas') %}
    <!-- Datatable -->
        <table id="arc_remesas_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Tiempo</th>
                    <th>Juzgado</th>
                    <th>Estado</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{# se manda llamar el botón de la ayuda  #}
{% block content_help %}
    <a href="https://www.pjecz.gob.mx/pjecz-plataforma-web/arc_documentos/" class="d-block mt-3 btn-flotante bg-info" role="button" target="_blank"><i class="fas fa-question"></i></a>
{% endblock %}

{% block custom_javascript %}
    {{ detail.moment_js(moment) }}
    {% if current_user.can_edit('ARC DOCUMENTOS') %}
        {% if documento.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar?') }}{% endif %}
        {% if documento.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar?') }}{% endif %}
    {% endif %}
    <!-- Importación de la configuración para DataTables -->
    <script src="/static/js/datatables_config.js"></script>
    <!-- Importación de los fitlros para dataTable -->
    <script src="/static/js/datatables_filtros.js"></script>
    <script>
        const dataTable_funcs_bitacoras = new ConfigDataTable( "{{ csrf_token() }}" );
        let configDataTable_bitacoras = dataTable_funcs_bitacoras.config;
        configDataTable_bitacoras['ajax']['url'] = '/arc_documentos_bitacoras/datatable_json';
        configDataTable_bitacoras['ajax']['data'] = { 'estatus': "A", 'arc_documento_id': {{ documento.id }} };
        configDataTable_bitacoras['columns'] = [
            { data: "modificado" },
            { data: "usuario" },
            { data: "fojas" },
            { data: "observaciones" },
            { data: "accion" }
        ];
        configDataTable_bitacoras['columnDefs'] = [
            {
                targets: 0, // modificado
                type: "date",
                render: function (data, type, row) {
                    return moment.utc(data).local().format("YYYY-MM-DD HH:mm:ss");
                }
            },
            {
                targets: 1, // usuario
                data: null,
                render: function(data, type, row, meta) {
                    if (data.nombre.length > 16)
                        nombre = data.nombre.substr(0, 16) + '…';
                    else
                        nombre = data.nombre;
                    return '<span title="' + data.nombre + '">' + nombre + '</span>';
                }
            },
            {
                targets: 3, // observaciones
                data: null,
                render: function(data, type, row, meta) {
                    if (data.length > 16)
                        texto = '<span title="' + data + '">' + data.substr(0, 16) + '…' + '</span>';
                    else
                        texto = data;
                    return texto;
                }
            },
            {
                targets: 4, // accion
                data: null,
                render: function(data, type, row, meta) {
                    let bgcolor = "bg-dark";
                    switch (data)    {
                        case "ALTA":            bgcolor = 'bg-info';        break;
                        case "EDICION DOC":     bgcolor = 'bg-warning text-dark';       break;
                        case "CORRECCION FOJAS":  bgcolor = 'bg-warning text-dark';     break;
                        case "NO ENCONTRADO":     bgcolor = 'bg-danger';    break;
                        case "ENVIADO":         bgcolor = 'bg-pink';        break;
                        case "ENTREGADO":       bgcolor = 'bg-success';     break;
                        case "ARCHIVAR":        bgcolor = 'bg-secondary';   break;
                    }
                    return '<span class="badge rounded-pill ' + bgcolor + '">' + data + '</span>';
                }
            }
        ];

        // Búsqueda
        let fechaDesde = document.getElementById('fechaDesdeInput').value
        let fechaHasta = document.getElementById('fechaHastaInput').value
        let accion = document.getElementById('accionSelect').value;
        let usuario = document.getElementById('usuarioSelect').value.toUpperCase();

        // Declaración de los Filtros utilizados
        // Creación del Objeto manejador de Filtros
        const filtros_bitacoras = new Filtros('#documentos_bitacora_datatable', configDataTable_bitacoras);
        // Añadimos los difrentes inputs utilizados
        filtros_bitacoras.add_input('fechaDesdeInput', 'fecha_desde');
        filtros_bitacoras.add_input('fechaHastaInput', 'fecha_hasta');
        filtros_bitacoras.add_input('accionSelect', 'accion');
        filtros_bitacoras.add_input('usuarioSelect', 'usuario_id');
        // Precarga de los valores de los inputs mantenidos después de la carga de la página.
        filtros_bitacoras.precarga();
    </script>
    <!-- Select2 bootstrap -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function(){
            $('#usuarioSelect').addClass('js-data-example-ajax form-control');
            $('#usuarioSelect').select2({
                // --- Carga de juzgados por Ajax --- //
                ajax: {
                    url: '/usuarios/list_usuarios_json/',
                    headers: { "X-CSRF-TOKEN": "{{ csrf_token() }}" },
                    dataType: 'json',
                    delay: 250,
                    type: "POST",
                    data: function (params) {
                        return { 'searchString': params.term.toUpperCase() };
                    }
                },
                minimumInputLength: 3
            });
        });
    </script>
    <!-- DataTable para Historial de Solicitudes -->
    
    <script>
        const dataTable_funcs_solicitudes = new ConfigDataTable( "{{ csrf_token() }}" );
        let configDataTable_solicitudes = dataTable_funcs_solicitudes.config;
        configDataTable_solicitudes['ajax']['url'] = '/arc_solicitudes/datatable_json';
        configDataTable_solicitudes['ajax']['data'] = { 'estatus': "A", 'arc_documento_id': {{ documento.id }}, 'orden_acendente': true };
        configDataTable_solicitudes['columns'] = [
            { data: 'solicitud' },
            { data: 'tiempo' },
            { data: 'juzgado' },
            { data: 'estado' }
        ];
        configDataTable_solicitudes['columnDefs'] = [
            {
                targets: 0, // solicitud
                type: "date",
                render: function (data, type, row) {
                    return '<a href="' + data.url + '">' + data.id + '</a>';
                }
            },{
                targets: 1, // tiempo
                type: "date",
                render: function (data, type, row) {
                    return moment.utc(data).local().format("YYYY-MM-DD HH:mm:ss");
                }
            },
            {
                targets: 2, // juzgado
                data: null,
                render: function(data, type, row, meta) {
                    return '<span title="' + data.nombre + '">' + data.clave + '</span>';
                }
            },
            {
                targets: 3, // estado
                data: null,
                render: function(data, type, row, meta) {
                    switch (data)    {
                        case "SOLICITADO":      return '<span class="badge rounded-pill bg-warning text-dark">SOLICITADO</span>';   break;
                        case "CANCELADO":       return '<span class="badge rounded-pill bg-secondary">CANCELADO</span>';   break;
                        case "ASIGNADO":        return '<span class="badge rounded-pill bg-primary">ASIGNADO</span>';   break;
                        case "ENCONTRADO":      return '<span class="badge rounded-pill bg-purple">ENCONTRADO</span>';   break;
                        case "NO ENCONTRADO":   return '<span class="badge rounded-pill bg-danger">NO ENCONTRADO</span>';   break;
                        case "ENVIANDO":        return '<span class="badge rounded-pill bg-pink">ENVIANDO</span>';   break;
                        case "ENTREGADO":       return '<span class="badge rounded-pill bg-success">ENTREGADO</span>';   break;
                    }
                    return data;
                }
            }
        ];
        
        // Creación del Objeto manejador
        const datatable_solicitudes = new Filtros('#arc_solicitudes_datatable', configDataTable_solicitudes);
        datatable_solicitudes.precarga();
    </script>
    <!-- DataTable para Historial de Remesas -->
    <script>
        const dataTable_funcs_remesas = new ConfigDataTable( "{{ csrf_token() }}" );
        let configDataTable_remesas = dataTable_funcs_remesas.config;
        configDataTable_remesas['ajax']['url'] = '/arc_remesas/datatable_json';
        configDataTable_remesas['ajax']['data'] = { 'estatus': "A", 'documento_id': {{ documento.id }}, 'orden_acendente': true };
        configDataTable_remesas['columns'] = [
            { data: 'remesa' },
            { data: 'tiempo' },
            { data: 'juzgado' },
            { data: 'estado' }
        ];
        configDataTable_remesas['columnDefs'] = [
            {
                targets: 0, // remesa
                type: "date",
                render: function (data, type, row) {
                    return '<a href="' + data.url + '">' + data.id + '</a>';
                }
            },{
                targets: 1, // tiempo
                type: "date",
                render: function (data, type, row) {
                    return moment.utc(data).local().format("YYYY-MM-DD HH:mm:ss");
                }
            },
            {
                targets: 2, // juzgado
                data: null,
                render: function(data, type, row, meta) {
                    return '<span title="' + data.nombre + '">' + data.clave + '</span>';
                }
            },
            {
                targets: 3, // estado
                data: null,
                render: function(data, type, row, meta) {
                    let bgcolor = "";
                    switch (data)    {
                        case "PENDIENTE":       bgcolor = "bg-warning text-dark";   break;
                        case "CANCELADO":       bgcolor = "bg-secondary";           break;
                        case "ENVIADO":         bgcolor = "bg-pink";                break;
                        case "ASIGNADO":        bgcolor = "bg-primary";             break;
                        case "RECHAZADO":       bgcolor = "bg-danger";              break;
                        case "ENCONTRADO":      bgcolor = "bg-purple";              break;
                        case "ARCHIVADO":       bgcolor = "bg-success";             break;
                        case "ARCHIVADO CON ANOMALIA":  bgcolor = "bg-teal";        break;
                    }
                    return '<span class="badge rounded-pill ' + bgcolor + '">' + data + '</span>';
                }
            },
        ];
        
        // Creación del Objeto manejador
        const datatable_remesas = new Filtros('#arc_remesas_datatable', configDataTable_remesas);
        datatable_remesas.precarga();
    </script>
{% endblock %}
