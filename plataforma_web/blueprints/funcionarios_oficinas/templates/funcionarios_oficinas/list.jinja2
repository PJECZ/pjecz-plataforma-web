{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Funcionarios - Oficinas{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {% if current_user.can_edit('FUNCIONARIOS OFICINAS') %}
            {% if estatus == 'A' %}{{ topbar.button_list_inactive('Inactivos', url_for('funcionarios_oficinas.list_inactive')) }}{% endif %}
            {% if estatus == 'B' %}{{ topbar.button_list_active('Activos', url_for('funcionarios_oficinas.list_active')) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
        <table id="funcionarios_oficinas_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>IDs</th>
                    <th>CURPs</th>
                    <th>Nombres</th>
                    <th>Oficinas</th>
                    <th>Descripciones cortas</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <script>
        $('#funcionarios_oficinas_datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            searching: false,
            responsive: true,
            scrollX: true,
            ajax: {
                url: "/funcionarios_oficinas/datatable_json",
                type: "POST",
                headers: {'X-CSRF-TOKEN': "{{ csrf_token() }}"},
                dataType: "json",
                dataSrc: "data",
                data: {{ filtros }}
            },
            columns: [
                { data: "detalle" },
                { data: "funcionario" },
                { data: "funcionario_nombre" },
                { data: "oficina" },
                { data: "oficina_descripcion_corta" }
            ],
            columnDefs: [
                {
                    targets: 0,
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1,
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url == '') {
                            data.curp;
                        } else {
                            return '<a href="' + data.url + '">' + data.curp + '</a>';
                        }
                    }
                },
                {
                    targets: 3,
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url == '') {
                            return data.clave;
                        } else {
                            return '<a href="' + data.url + '">' + data.clave + '</a>';
                        }
                    }
                },
                {
                    targets: [2, 4],
                    data: null,
                    render: function(data, type, row, meta) {
                        return (data.length > 32 ? data.substr(0, 32) + '…' : data);
                    }
                }
            ],
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        });
    </script>
{% endblock %}
