{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Oficina{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Oficina ' + oficina.clave) %}
        {{ topbar.button_previous('Oficinas', url_for('oficinas.list_active')) }}
        {% if current_user.can_edit('OFICINAS') %}
            {{ topbar.button_edit('Editar', url_for('oficinas.edit', oficina_id=oficina.id)) }}
            {% if oficina.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('oficinas.delete', oficina_id=oficina.id)) }}{% endif %}
            {% if oficina.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('oficinas.recover', oficina_id=oficina.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=oficina.estatus) %}
        {{ detail.label_value_big('Clave', oficina.clave) }}
        {{ detail.label_value('Descripción', oficina.descripcion) }}
        {{ detail.label_value('Descripción Corta', oficina.descripcion_corta) }}
        {{ detail.label_value('Distrito', oficina.distrito.nombre, url_for('distritos.detail', distrito_id=oficina.distrito_id)) }}
        {{ detail.label_value('Domicilio', oficina.domicilio.completo, url_for('domicilios.detail', domicilio_id=oficina.domicilio_id)) }}
        {{ detail.label_value('Horario', oficina.apertura.strftime("%H:%M") + ' — ' + oficina.cierre.strftime("%H:%M")) }}
        {{ detail.label_value('Límite de Personas', oficina.limite_personas) }}
        {{ detail.label_value_boolean('Juridiccional', oficina.es_juridiccional) }}
    {% endcall %}
    {% call detail.card('Funcionarios') %}
        <table id="funcionarios_oficinas_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombres completos</th>
                    <th>CURP</th>
                    <th>e-mail</th>
                    <th>Puesto</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
    {% call detail.card('Usuarios') %}
        <table id="usuarios_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>IDs</th>
                    <th>Nombres Completos</th>
                    <th>e-mail</th>
                    <th>Puesto</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_edit('OFICINAS') %}
        {% if oficina.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar ' + oficina.clave + '?') }}{% endif %}
        {% if oficina.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar ' + oficina.clave + '?') }}{% endif %}
    {% endif %}
    <script>
        $('#usuarios_datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            searching: false,
            responsive: true,
            scrollX: true,
            ajax: {
                url: "/usuarios/datatable_json",
                type: "POST",
                headers: {'X-CSRF-TOKEN': "{{ csrf_token() }}"},
                dataType: "json",
                dataSrc: "data",
                data: {"estatus": "A", "oficina_id": {{ oficina.id }}},
            },
            columns: [
                { data: "detalle" },
                { data: "nombre" },
                { data: "email" },
                { data: "puesto" }
            ],
            columnDefs: [
                {
                    targets: 0,
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 2,
                    data: null,
                    render: function(data, type, row, meta) {
                        return (data.length > 32 ? data.substr(0, 32) + '…' : data);
                    }
                }
            ],
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        });
    </script>
{% endblock %}
