{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Distrito{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Distrito ' + distrito.nombre_corto) %}
        {{ topbar.button_previous('Distritos', url_for('distritos.list_active')) }}
        {% if current_user.can_edit('DISTRITOS') %}
            {{ topbar.button_edit('Editar', url_for('distritos.edit', distrito_id=distrito.id)) }}
            {% if distrito.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('distritos.delete', distrito_id=distrito.id)) }}{% endif %}
            {% if distrito.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('distritos.recover', distrito_id=distrito.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=distrito.estatus) %}
        {{ detail.label_value('Nombre', distrito.nombre) }}
        {{ detail.label_value('Nombre corto', distrito.nombre_corto) }}
        {{ detail.label_value_boolean('Es Distrito Judicial', distrito.es_distrito_judicial) }}
        {{ detail.label_value('Creado', moment(distrito.creado).format('llll')) }}
    {% endcall %}
    {% if current_user.can_view('AUTORIDADES') %}
        {% call detail.card('Autoridades') %}
            <table id="autoridades_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Clave</th>
                        <th>Descripción corta</th>
                        <th>Órgano Jurisdiccional</th>
                        <th>Materia</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
    {% if current_user.can_view('OFICINAS') %}
        {% call detail.card('Oficinas') %}
            <table id="oficinas_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Clave</th>
                        <th>Descripción corta</th>
                        <th>Edificio</th>
                        <th>Tipo</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
    {% if current_user.can_view('REPSVM AGRESORES') %}
        {% call detail.card('REPSVM Agresores') %}
            <table id="repsvm_agresores_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Consecutivo</th>
                        <th>Número de causa</th>
                        <th>Pena impuesta</th>
                        <th>V.P. Sentencia</th>
                        <th>Es público</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_edit('DISTRITOS') %}
        {% if distrito.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + distrito.nombre + '?') }}{% endif %}
        {% if distrito.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + distrito.nombre + '?') }}{% endif %}
    {% endif %}
    {{ detail.config_datatable() }}
    {% if current_user.can_view('AUTORIDADES') %}
        <script>

            // DataTable Autoridades
            configDataTable['ajax']['url'] = '/autoridades/datatable_json';
            configDataTable['ajax']['data'] = { 'estatus': "A", 'distrito_id': {{ distrito.id}} };
            configDataTable['columns'] = [
                { data: "detalle" },
                { data: "descripcion_corta" },
                { data: "organo_jurisdiccional" },
                { data: "materia" }
            ];
            configDataTable['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.clave + '</a>';
                    }
                },
                {
                    targets: 3, // materia
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url == '') {
                            return data.nombre;
                        } else {
                            return '<a href="' + data.url + '">' + data.nombre + '</a>';
                        }
                    }
                }
            ];
            $('#autoridades_datatable').DataTable(configDataTable);
        </script>
    {% endif %}
    {% if current_user.can_view('OFICINAS') %}
        <script>

            // DataTable Oficinas
            configDataTable['ajax']['url'] = '/oficinas/datatable_json';
            configDataTable['ajax']['data'] = { 'estatus': "A", 'distrito_id': {{ distrito.id}} };
            configDataTable['columns'] = [
                { data: "detalle" },
                { data: "descripcion_corta" },
                { data: "domicilio" },
                { data: "tipo" }
            ];
            configDataTable['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.clave + '</a>';
                    }
                },
                {
                    targets: 1, // descripcion_corta
                    data: null,
                    render: function(data, type, row, meta) {
                        return (data.length > 48 ? data.substr(0, 48) + '…' : data);
                    }
                },
                {
                    targets: 2, // domicilio
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.edificio.length > 32) {
                            texto = data.edificio.substr(0, 32) + '…';
                        } else {
                            texto = data.edificio;
                        }
                        if (data.url == '') {
                            return texto;
                        } else {
                            return '<a href="' + data.url + '">' + texto + '</a>';
                        }
                    }
                }
            ];
            $('#oficinas_datatable').DataTable(configDataTable);

        </script>
    {% endif %}
    {% if current_user.can_view('REPSVM AGRESORES') %}
        <script>

            // DataTable REPSVM Agresores
            configDataTable['ajax']['url'] = '/repsvm_agresores/datatable_json';
            configDataTable['ajax']['data'] = { 'estatus': "A", 'distrito_id': {{ distrito.id}} };
            configDataTable['columns'] = [
                { data: "detalle" },
                { data: "consecutivo" },
                { data: "numero_causa" },
                { data: "pena_impuesta" },
                { data: "sentencia_url" },
                { data: "toggle_es_publico" },
            ];
            configDataTable['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.nombre.length > 24) {
                            texto = '<span title="' + data.nombre + '">' + data.nombre.substr(0, 24) + '…' + '</span>';
                        } else {
                            texto = data.nombre;
                        }
                        return '<a href="' + data.url + '">' + texto + '</a>';
                    }
                },
                {
                    targets: [2, 3], // Numero de Causa y Pena
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.length > 24) {
                            return '<span title="' + data + '">' + data.substr(0, 48) + '…' + '</span>';
                        }
                        return data;
                    }
                },
                {
                    targets: 4, // Sentencia URL
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data != '') {
                            return '<a href="' + data + '" target="_blank"><span class="iconify fs-4" data-icon="mdi:file-download"></span></a>';
                        }
                        return '';
                    }
                },
                {
                    targets: 5, // Toggle es_publico
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.es_publico) {
                            return '<button id="toggle' + data.id + '" type="button" class="btn btn-sm btn-outline-primary" onclick="toggleEsPublico(\'#toggle' + data.id + '\', ' + data.es_publico + ', \'' + data.url + '\')"><span class="iconify" data-icon="mdi:eye"></span></button>';
                        } else {
                            return '<button id="toggle' + data.id + '" type="button" class="btn btn-sm btn-light" onclick="toggleEsPublico(\'#toggle' + data.id + '\', ' + data.es_publico + ', \'' + data.url + '\')"><span class="iconify" data-icon="mdi:eye-off"></span></button>';
                        }
                    }
                }
            ];
            $('#repsvm_agresores_datatable').DataTable(configDataTable);

            // Preparar headers para POST
            const myHeaders = new Headers();
            myHeaders.append("X-CSRF-TOKEN", "{{ csrf_token() }}");
            const myInit = {
                method: 'POST',
                headers: myHeaders,
                mode: 'cors',
                cache: 'default'
            };

            // Boton es_publico
            function toggleEsPublico(id, es_publico, url) {
                $(id).prop("disabled", true); // Deshabilitar boton para evitar multiples clicks
                fetch(url, myInit)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            if (data.es_publico) {
                                $(id).removeClass('btn-light');
                                $(id).addClass('btn-outline-primary');
                                $(id).html('<span class="iconify" data-icon="mdi:eye"></span>');
                            } else {
                                $(id).removeClass('btn-outline-primary');
                                $(id).addClass('btn-light');
                                $(id).html('<span class="iconify" data-icon="mdi:eye-off"></span>');
                            }
                            console.log(data.message);
                        } else {
                            console.log(data.message);
                        }
                        $(id).prop("disabled", false); // Habilitar boton
                    })
                    .catch(error => {
                        console.log(error);
                    });
            }

        </script>
    {% endif %}
    {{ detail.moment_js(moment) }}
{% endblock %}
